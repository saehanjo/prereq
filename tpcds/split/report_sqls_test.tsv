54	create table subquery90248 as SELECT SUBSTR(w_warehouse_name, 1, 20), sm_type, web_name, SUM(CASE WHEN (ws_ship_date_sk - ws_sold_date_sk <= 30) THEN 1 ELSE 0 END) AS "30 days", SUM(CASE WHEN (ws_ship_date_sk - ws_sold_date_sk > 30) AND (ws_ship_date_sk - ws_sold_date_sk <= 60) THEN 1 ELSE 0 END) AS "31-60 days", SUM(CASE WHEN (ws_ship_date_sk - ws_sold_date_sk > 60) AND (ws_ship_date_sk - ws_sold_date_sk <= 90) THEN 1 ELSE 0 END) AS "61-90 days", SUM(CASE WHEN (ws_ship_date_sk - ws_sold_date_sk > 90) AND (ws_ship_date_sk - ws_sold_date_sk <= 120) THEN 1 ELSE 0 END) AS "91-120 days", SUM(CASE WHEN (ws_ship_date_sk - ws_sold_date_sk > 120) THEN 1 ELSE 0 END) AS ">120 days" FROM web_sales, warehouse, ship_mode, web_site, date_dim WHERE d_month_seq BETWEEN 1214 AND 1214 + 11 AND ws_ship_date_sk = d_date_sk AND ws_warehouse_sk = w_warehouse_sk AND ws_ship_mode_sk = sm_ship_mode_sk AND ws_web_site_sk = web_site_sk GROUP BY SUBSTR(w_warehouse_name, 1, 20), sm_type, web_name ORDER BY SUBSTR(w_warehouse_name, 1, 20), sm_type, web_name
54	SELECT * FROM (select * from subquery90248) WHERE rownum <= 100
54	create table subquery846889 as SELECT i_manager_id, SUM(ss_sales_price) AS sum_sales, AVG(SUM(ss_sales_price)) OVER(PARTITION BY i_manager_id) AS avg_monthly_sales FROM item, store_sales, date_dim, store WHERE ss_item_sk = i_item_sk AND ss_sold_date_sk = d_date_sk AND ss_store_sk = s_store_sk AND d_month_seq IN (1210 + 7, 1210 + 1, 1210 + 4, 1210 + 3, 1210 + 2, 1210 + 8, 1210 + 5, 1210 + 9, 1210 + 6, 1210 + 11, 1210, 1210 + 10) AND ((i_category IN ('Children', 'Electronics') AND i_class IN ('personal', 'reference', 'portable') AND i_brand IN ('exportiunivamalg #9', 'scholaramalgamalg #9')) OR (i_category IN ('Women') AND i_class IN ('accessories', 'classical', 'fragrances', 'pants') AND i_brand IN ('edu packscholar #1', 'exportiimporto #1', 'importoamalg #1', 'amalgimporto #1'))) GROUP BY i_manager_id, d_moy
54	create table subquery461123 as SELECT * FROM (select * from subquery846889) AS tmp1 WHERE CASE WHEN avg_monthly_sales > 0 THEN ABS(sum_sales - avg_monthly_sales) / avg_monthly_sales ELSE NULL END > 0.1 ORDER BY i_manager_id, avg_monthly_sales, sum_sales
54	SELECT * FROM (select * from subquery461123) WHERE rownum <= 100
54	create table subquery773862 as SELECT cs_item_sk, SUM(cs_ext_list_price) AS sale, SUM(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS refund FROM catalog_sales, catalog_returns WHERE cs_item_sk = cr_item_sk AND cs_order_number = cr_order_number GROUP BY cs_item_sk HAVING SUM(cs_ext_list_price) > 2 * SUM(cr_refunded_cash + cr_reversed_charge + cr_store_credit)
54	create table subquery417356 as with cs_ui AS (select * from subquery773862) SELECT i_product_name AS product_name, i_item_sk AS item_sk, s_store_name AS store_name, s_zip AS store_zip, ad1.ca_street_number AS b_street_number, ad1.ca_street_name AS b_street_name, ad1.ca_city AS b_city, ad1.ca_zip AS b_zip, ad2.ca_street_number AS c_street_number, ad2.ca_street_name AS c_street_name, ad2.ca_city AS c_city, ad2.ca_zip AS c_zip, d1.d_year AS syear, d2.d_year AS fsyear, d3.d_year AS s2year, COUNT(*) AS cnt, SUM(ss_wholesale_cost) AS s1, SUM(ss_list_price) AS s2, SUM(ss_coupon_amt) AS s3 FROM store_sales, store_returns, cs_ui, date_dim AS d1, date_dim AS d2, date_dim AS d3, store, customer, customer_demographics AS cd1, customer_demographics AS cd2, promotion, household_demographics AS hd1, household_demographics AS hd2, customer_address AS ad1, customer_address AS ad2, income_band AS ib1, income_band AS ib2, item WHERE ss_store_sk = s_store_sk AND ss_sold_date_sk = d1.d_date_sk AND ss_customer_sk = c_customer_sk AND ss_cdemo_sk = cd1.cd_demo_sk AND ss_hdemo_sk = hd1.hd_demo_sk AND ss_addr_sk = ad1.ca_address_sk AND ss_item_sk = i_item_sk AND ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number AND ss_item_sk = cs_ui.cs_item_sk AND c_current_cdemo_sk = cd2.cd_demo_sk AND c_current_hdemo_sk = hd2.hd_demo_sk AND c_current_addr_sk = ad2.ca_address_sk AND c_first_sales_date_sk = d2.d_date_sk AND c_first_shipto_date_sk = d3.d_date_sk AND ss_promo_sk = p_promo_sk AND hd1.hd_income_band_sk = ib1.ib_income_band_sk AND hd2.hd_income_band_sk = ib2.ib_income_band_sk AND cd1.cd_marital_status <> cd2.cd_marital_status AND i_color IN ('navajo', 'peru', 'goldenrod', 'drab') AND i_current_price BETWEEN 64 AND 64 + 10 AND i_current_price BETWEEN 64 + 1 AND 64 + 15 GROUP BY i_product_name, i_item_sk, s_store_name, s_zip, ad1.ca_street_number, ad1.ca_street_name, ad1.ca_city, ad1.ca_zip, ad2.ca_street_number, ad2.ca_street_name, ad2.ca_city, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year
54	WITH cs_ui AS (select * from subquery773862), cross_sales AS (select * from subquery417356) SELECT cs1.product_name, cs1.store_name, cs1.store_zip, cs1.b_street_number, cs1.b_street_name, cs1.b_city, cs1.b_zip, cs1.c_street_number, cs1.c_street_name, cs1.c_city, cs1.c_zip, cs1.syear, cs1.cnt, cs1.s1 AS s11, cs1.s2 AS s21, cs1.s3 AS s31, cs2.s1 AS s12, cs2.s2 AS s22, cs2.s3 AS s32, cs2.syear, cs2.cnt FROM cross_sales AS cs1, cross_sales AS cs2 WHERE cs1.item_sk = cs2.item_sk AND cs1.syear = 1999 AND cs2.syear = 1999 + 1 AND cs2.cnt <= cs1.cnt AND cs1.store_name = cs2.store_name AND cs1.store_zip = cs2.store_zip ORDER BY cs1.product_name, cs1.store_name, cs2.cnt, cs1.s1, cs2.s1
54	create table subquery687063 as SELECT ss_store_sk, ss_item_sk, SUM(ss_sales_price) AS revenue FROM store_sales, date_dim WHERE ss_sold_date_sk = d_date_sk AND d_month_seq BETWEEN 1213 AND 1213 + 11 GROUP BY ss_store_sk, ss_item_sk
54	create table subquery743297 as select * from subquery687063
54	create table subquery423656 as SELECT ss_store_sk, AVG(revenue) AS ave FROM (select * from subquery743297) AS sa GROUP BY ss_store_sk
54	create table subquery274732 as SELECT s_store_name, i_item_desc, sc.revenue, i_current_price, i_wholesale_cost, i_brand FROM store, item, (select * from subquery423656) AS sb, (select * from subquery743297) AS sc WHERE sb.ss_store_sk = sc.ss_store_sk AND sc.revenue <= 0.1 * sb.ave AND s_store_sk = sc.ss_store_sk AND i_item_sk = sc.ss_item_sk ORDER BY s_store_name, i_item_desc
54	SELECT * FROM (select * from subquery274732) WHERE rownum <= 100
54	create table subquery179766 as SELECT w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, 'ORIENTAL' || ',' || 'USPS' AS ship_carriers, d_year AS year, SUM(CASE WHEN d_moy = 1 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS jan_sales, SUM(CASE WHEN d_moy = 2 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS feb_sales, SUM(CASE WHEN d_moy = 3 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS mar_sales, SUM(CASE WHEN d_moy = 4 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS apr_sales, SUM(CASE WHEN d_moy = 5 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS may_sales, SUM(CASE WHEN d_moy = 6 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS jun_sales, SUM(CASE WHEN d_moy = 7 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS jul_sales, SUM(CASE WHEN d_moy = 8 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS aug_sales, SUM(CASE WHEN d_moy = 9 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS sep_sales, SUM(CASE WHEN d_moy = 10 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS oct_sales, SUM(CASE WHEN d_moy = 11 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS nov_sales, SUM(CASE WHEN d_moy = 12 THEN cs_ext_list_price * cs_quantity ELSE 0 END) AS dec_sales, SUM(CASE WHEN d_moy = 1 THEN cs_net_paid * cs_quantity ELSE 0 END) AS jan_net, SUM(CASE WHEN d_moy = 2 THEN cs_net_paid * cs_quantity ELSE 0 END) AS feb_net, SUM(CASE WHEN d_moy = 3 THEN cs_net_paid * cs_quantity ELSE 0 END) AS mar_net, SUM(CASE WHEN d_moy = 4 THEN cs_net_paid * cs_quantity ELSE 0 END) AS apr_net, SUM(CASE WHEN d_moy = 5 THEN cs_net_paid * cs_quantity ELSE 0 END) AS may_net, SUM(CASE WHEN d_moy = 6 THEN cs_net_paid * cs_quantity ELSE 0 END) AS jun_net, SUM(CASE WHEN d_moy = 7 THEN cs_net_paid * cs_quantity ELSE 0 END) AS jul_net, SUM(CASE WHEN d_moy = 8 THEN cs_net_paid * cs_quantity ELSE 0 END) AS aug_net, SUM(CASE WHEN d_moy = 9 THEN cs_net_paid * cs_quantity ELSE 0 END) AS sep_net, SUM(CASE WHEN d_moy = 10 THEN cs_net_paid * cs_quantity ELSE 0 END) AS oct_net, SUM(CASE WHEN d_moy = 11 THEN cs_net_paid * cs_quantity ELSE 0 END) AS nov_net, SUM(CASE WHEN d_moy = 12 THEN cs_net_paid * cs_quantity ELSE 0 END) AS dec_net FROM catalog_sales, warehouse, date_dim, time_dim, ship_mode WHERE cs_warehouse_sk = w_warehouse_sk AND cs_sold_date_sk = d_date_sk AND cs_sold_time_sk = t_time_sk AND cs_ship_mode_sk = sm_ship_mode_sk AND d_year = 1999 AND t_time BETWEEN 52067 AND 52067 + 28800 AND sm_carrier IN ('USPS') GROUP BY w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, d_year
54	create table subquery525338 as SELECT w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, 'ORIENTAL' || ',' || 'USPS' AS ship_carriers, d_year AS year, SUM(CASE WHEN d_moy = 1 THEN ws_sales_price * ws_quantity ELSE 0 END) AS jan_sales, SUM(CASE WHEN d_moy = 2 THEN ws_sales_price * ws_quantity ELSE 0 END) AS feb_sales, SUM(CASE WHEN d_moy = 3 THEN ws_sales_price * ws_quantity ELSE 0 END) AS mar_sales, SUM(CASE WHEN d_moy = 4 THEN ws_sales_price * ws_quantity ELSE 0 END) AS apr_sales, SUM(CASE WHEN d_moy = 5 THEN ws_sales_price * ws_quantity ELSE 0 END) AS may_sales, SUM(CASE WHEN d_moy = 6 THEN ws_sales_price * ws_quantity ELSE 0 END) AS jun_sales, SUM(CASE WHEN d_moy = 7 THEN ws_sales_price * ws_quantity ELSE 0 END) AS jul_sales, SUM(CASE WHEN d_moy = 8 THEN ws_sales_price * ws_quantity ELSE 0 END) AS aug_sales, SUM(CASE WHEN d_moy = 9 THEN ws_sales_price * ws_quantity ELSE 0 END) AS sep_sales, SUM(CASE WHEN d_moy = 10 THEN ws_sales_price * ws_quantity ELSE 0 END) AS oct_sales, SUM(CASE WHEN d_moy = 11 THEN ws_sales_price * ws_quantity ELSE 0 END) AS nov_sales, SUM(CASE WHEN d_moy = 12 THEN ws_sales_price * ws_quantity ELSE 0 END) AS dec_sales, SUM(CASE WHEN d_moy = 1 THEN ws_net_profit * ws_quantity ELSE 0 END) AS jan_net, SUM(CASE WHEN d_moy = 2 THEN ws_net_profit * ws_quantity ELSE 0 END) AS feb_net, SUM(CASE WHEN d_moy = 3 THEN ws_net_profit * ws_quantity ELSE 0 END) AS mar_net, SUM(CASE WHEN d_moy = 4 THEN ws_net_profit * ws_quantity ELSE 0 END) AS apr_net, SUM(CASE WHEN d_moy = 5 THEN ws_net_profit * ws_quantity ELSE 0 END) AS may_net, SUM(CASE WHEN d_moy = 6 THEN ws_net_profit * ws_quantity ELSE 0 END) AS jun_net, SUM(CASE WHEN d_moy = 7 THEN ws_net_profit * ws_quantity ELSE 0 END) AS jul_net, SUM(CASE WHEN d_moy = 8 THEN ws_net_profit * ws_quantity ELSE 0 END) AS aug_net, SUM(CASE WHEN d_moy = 9 THEN ws_net_profit * ws_quantity ELSE 0 END) AS sep_net, SUM(CASE WHEN d_moy = 10 THEN ws_net_profit * ws_quantity ELSE 0 END) AS oct_net, SUM(CASE WHEN d_moy = 11 THEN ws_net_profit * ws_quantity ELSE 0 END) AS nov_net, SUM(CASE WHEN d_moy = 12 THEN ws_net_profit * ws_quantity ELSE 0 END) AS dec_net FROM web_sales, warehouse, date_dim, time_dim, ship_mode WHERE ws_warehouse_sk = w_warehouse_sk AND ws_sold_date_sk = d_date_sk AND ws_sold_time_sk = t_time_sk AND ws_ship_mode_sk = sm_ship_mode_sk AND d_year = 1999 AND t_time BETWEEN 52067 AND 52067 + 28800 AND sm_carrier IN ('USPS') GROUP BY w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, d_year
54	create table subquery657987 as SELECT w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, ship_carriers, year, SUM(jan_sales) AS jan_sales, SUM(feb_sales) AS feb_sales, SUM(mar_sales) AS mar_sales, SUM(apr_sales) AS apr_sales, SUM(may_sales) AS may_sales, SUM(jun_sales) AS jun_sales, SUM(jul_sales) AS jul_sales, SUM(aug_sales) AS aug_sales, SUM(sep_sales) AS sep_sales, SUM(oct_sales) AS oct_sales, SUM(nov_sales) AS nov_sales, SUM(dec_sales) AS dec_sales, SUM(jan_sales / w_warehouse_sq_ft) AS jan_sales_per_sq_foot, SUM(feb_sales / w_warehouse_sq_ft) AS feb_sales_per_sq_foot, SUM(mar_sales / w_warehouse_sq_ft) AS mar_sales_per_sq_foot, SUM(apr_sales / w_warehouse_sq_ft) AS apr_sales_per_sq_foot, SUM(may_sales / w_warehouse_sq_ft) AS may_sales_per_sq_foot, SUM(jun_sales / w_warehouse_sq_ft) AS jun_sales_per_sq_foot, SUM(jul_sales / w_warehouse_sq_ft) AS jul_sales_per_sq_foot, SUM(aug_sales / w_warehouse_sq_ft) AS aug_sales_per_sq_foot, SUM(sep_sales / w_warehouse_sq_ft) AS sep_sales_per_sq_foot, SUM(oct_sales / w_warehouse_sq_ft) AS oct_sales_per_sq_foot, SUM(nov_sales / w_warehouse_sq_ft) AS nov_sales_per_sq_foot, SUM(dec_sales / w_warehouse_sq_ft) AS dec_sales_per_sq_foot, SUM(jan_net) AS jan_net, SUM(feb_net) AS feb_net, SUM(mar_net) AS mar_net, SUM(apr_net) AS apr_net, SUM(may_net) AS may_net, SUM(jun_net) AS jun_net, SUM(jul_net) AS jul_net, SUM(aug_net) AS aug_net, SUM(sep_net) AS sep_net, SUM(oct_net) AS oct_net, SUM(nov_net) AS nov_net, SUM(dec_net) AS dec_net FROM (select * from subquery525338 UNION ALL select * from subquery179766) AS x GROUP BY w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, ship_carriers, year ORDER BY w_warehouse_name
54	SELECT * FROM (select * from subquery657987) WHERE rownum <= 100
38	create table subquery233806 as SELECT i_item_id, i_item_desc, i_current_price FROM item, inventory, date_dim, store_sales WHERE i_current_price BETWEEN 76 AND 76 + 30 AND inv_item_sk = i_item_sk AND d_date_sk = inv_date_sk AND d_date BETWEEN CAST('2001-07-15' AS DATE) AND (CAST('2001-07-15' AS DATE) + 60) AND i_manufact_id IN (181, 317, 310, 527) AND inv_quantity_on_hand BETWEEN 100 AND 500 AND ss_item_sk = i_item_sk GROUP BY i_item_id, i_item_desc, i_current_price ORDER BY i_item_id
38	SELECT * FROM (select * from subquery233806) WHERE rownum <= 100
38	create table subquery443766 as SELECT d_week_seq FROM date_dim WHERE d_date IN ('1999-11-15', '1999-10-03')
38	create table subquery143296 as SELECT d_date FROM date_dim WHERE d_week_seq IN (select * from subquery443766)
38	create table subquery665385 as SELECT i_item_id AS item_id, SUM(sr_return_quantity) AS sr_item_qty FROM store_returns, item, date_dim WHERE sr_item_sk = i_item_sk AND d_date IN (select * from subquery143296) AND sr_returned_date_sk = d_date_sk GROUP BY i_item_id
38	create table subquery821962 as SELECT d_week_seq FROM date_dim WHERE d_date IN ('1999-11-15', '1999-01-05', '1999-10-03')
38	create table subquery950723 as SELECT d_date FROM date_dim WHERE d_week_seq IN (select * from subquery821962)
38	create table subquery185074 as SELECT i_item_id AS item_id, SUM(cr_return_quantity) AS cr_item_qty FROM catalog_returns, item, date_dim WHERE cr_item_sk = i_item_sk AND d_date IN (select * from subquery950723) AND cr_returned_date_sk = d_date_sk GROUP BY i_item_id
38	create table subquery297995 as SELECT d_week_seq FROM date_dim WHERE d_date IN ('1999-01-05', '1999-11-15')
38	create table subquery482614 as SELECT d_date FROM date_dim WHERE d_week_seq IN (select * from subquery297995)
38	create table subquery71197 as SELECT i_item_id AS item_id, SUM(wr_return_quantity) AS wr_item_qty FROM web_returns, item, date_dim WHERE wr_item_sk = i_item_sk AND d_date IN (select * from subquery482614) AND wr_returned_date_sk = d_date_sk GROUP BY i_item_id
38	create table subquery311842 as with sr_items AS (select * from subquery665385), cr_items AS (select * from subquery185074), wr_items AS (select * from subquery71197) SELECT sr_items.item_id, sr_item_qty, sr_item_qty / (sr_item_qty + cr_item_qty + wr_item_qty) / 3.0 * 100 AS sr_dev, cr_item_qty, cr_item_qty / (sr_item_qty + cr_item_qty + wr_item_qty) / 3.0 * 100 AS cr_dev, wr_item_qty, wr_item_qty / (sr_item_qty + cr_item_qty + wr_item_qty) / 3.0 * 100 AS wr_dev, (sr_item_qty + cr_item_qty + wr_item_qty) / 3.0 AS average FROM sr_items, cr_items, wr_items WHERE sr_items.item_id = cr_items.item_id AND sr_items.item_id = wr_items.item_id ORDER BY sr_items.item_id, sr_item_qty
38	WITH sr_items AS (select * from subquery665385), cr_items AS (select * from subquery185074), wr_items AS (select * from subquery71197) SELECT * FROM (select * from subquery311842) WHERE rownum <= 100
38	create table subquery990850 as SELECT c_customer_id AS customer_id, COALESCE(c_last_name, '') || ', ' || COALESCE(c_first_name, '') AS customername FROM customer, customer_address, customer_demographics, household_demographics, income_band, store_returns WHERE ca_city = 'Highland' AND c_current_addr_sk = ca_address_sk AND ib_lower_bound >= 17947 AND ib_upper_bound <= 17947 + 50000 AND ib_income_band_sk = hd_income_band_sk AND cd_demo_sk = c_current_cdemo_sk AND hd_demo_sk = c_current_hdemo_sk AND sr_cdemo_sk = cd_demo_sk ORDER BY c_customer_id
38	SELECT * FROM (select * from subquery990850) WHERE rownum <= 100
38	create table subquery673620 as SELECT SUBSTR(r_reason_desc, 1, 20), AVG(ws_quantity), AVG(wr_refunded_cash), AVG(wr_fee) FROM web_sales, web_returns, web_page, customer_demographics AS cd1, customer_demographics AS cd2, customer_address, date_dim, reason WHERE ws_web_page_sk = wp_web_page_sk AND ws_item_sk = wr_item_sk AND ws_order_number = wr_order_number AND ws_sold_date_sk = d_date_sk AND d_year = 2002 AND cd1.cd_demo_sk = wr_refunded_cdemo_sk AND cd2.cd_demo_sk = wr_returning_cdemo_sk AND ca_address_sk = wr_refunded_addr_sk AND r_reason_sk = wr_reason_sk AND ((cd1.cd_marital_status = 'W' AND cd1.cd_marital_status = cd2.cd_marital_status AND cd1.cd_education_status = 'College' AND cd1.cd_education_status = cd2.cd_education_status AND ws_sales_price BETWEEN 100.00 AND 150.00) OR (cd1.cd_marital_status = 'S' AND cd1.cd_marital_status = cd2.cd_marital_status AND cd1.cd_education_status = 'Advanced Degree' AND cd1.cd_education_status = cd2.cd_education_status AND ws_sales_price BETWEEN 50.00 AND 100.00) OR (cd1.cd_marital_status = 'U' AND cd1.cd_marital_status = cd2.cd_marital_status AND cd1.cd_education_status = '4 yr Degree' AND cd1.cd_education_status = cd2.cd_education_status AND ws_sales_price BETWEEN 150.00 AND 200.00)) AND ((ca_country = 'United States' AND ca_state IN ('MD') AND ws_net_profit BETWEEN 100 AND 200) OR (ca_country = 'United States' AND ca_state IN ('AL', 'MA') AND ws_net_profit BETWEEN 150 AND 300) OR (ca_country = 'United States' AND ca_state IN ('MS', 'KY', 'TX') AND ws_net_profit BETWEEN 50 AND 250)) GROUP BY r_reason_desc ORDER BY SUBSTR(r_reason_desc, 1, 20), AVG(ws_quantity), AVG(wr_refunded_cash), AVG(wr_fee)
38	SELECT * FROM (select * from subquery673620) WHERE rownum <= 100
38	create table subquery396727 as SELECT DISTINCT c_last_name, c_first_name, d_date FROM web_sales, date_dim, customer WHERE web_sales.ws_sold_date_sk = date_dim.d_date_sk AND web_sales.ws_bill_customer_sk = customer.c_customer_sk AND d_month_seq BETWEEN 1214 AND 1214 + 11
38	create table subquery788186 as SELECT DISTINCT c_last_name, c_first_name, d_date FROM catalog_sales, date_dim, customer WHERE catalog_sales.cs_sold_date_sk = date_dim.d_date_sk AND catalog_sales.cs_bill_customer_sk = customer.c_customer_sk AND d_month_seq BETWEEN 1214 AND 1214 + 11
38	create table subquery356711 as SELECT DISTINCT c_last_name, c_first_name, d_date FROM store_sales, date_dim, customer WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_customer_sk = customer.c_customer_sk AND d_month_seq BETWEEN 1214 AND 1214 + 11
38	SELECT COUNT(*) FROM (((select * from subquery356711) EXCEPT (select * from subquery788186)) EXCEPT (select * from subquery396727)) AS cool_cust
38	create table subquery817961 as SELECT COUNT(*) AS h12_to_12_30 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 12 AND time_dim.t_minute < 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery91929 as SELECT COUNT(*) AS h11_30_to_12 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 11 AND time_dim.t_minute >= 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery10807 as SELECT COUNT(*) AS h11_to_11_30 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 11 AND time_dim.t_minute < 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery690206 as SELECT COUNT(*) AS h10_30_to_11 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 10 AND time_dim.t_minute >= 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery975049 as SELECT COUNT(*) AS h10_to_10_30 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 10 AND time_dim.t_minute < 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery109968 as SELECT COUNT(*) AS h9_30_to_10 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 9 AND time_dim.t_minute >= 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery969000 as SELECT COUNT(*) AS h9_to_9_30 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 9 AND time_dim.t_minute < 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	create table subquery338692 as SELECT COUNT(*) AS h8_30_to_9 FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 8 AND time_dim.t_minute >= 30 AND ((household_demographics.hd_dep_count = 1 AND household_demographics.hd_vehicle_count <= 1 + 2) OR (household_demographics.hd_dep_count = 3 AND household_demographics.hd_vehicle_count <= 3 + 2) OR (household_demographics.hd_dep_count = 0 AND household_demographics.hd_vehicle_count <= 0 + 2)) AND store.s_store_name = 'ese'
38	SELECT * FROM (select * from subquery338692) AS s1, (select * from subquery969000) AS s2, (select * from subquery109968) AS s3, (select * from subquery975049) AS s4, (select * from subquery690206) AS s5, (select * from subquery10807) AS s6, (select * from subquery91929) AS s7, (select * from subquery817961) AS s8
38	create table subquery149722 as SELECT i_category, i_class, i_brand, s_store_name, s_company_name, d_moy, SUM(ss_sales_price) AS sum_sales, AVG(SUM(ss_sales_price)) OVER(PARTITION BY i_category, i_brand, s_store_name, s_company_name) AS avg_monthly_sales FROM item, store_sales, date_dim, store WHERE ss_item_sk = i_item_sk AND ss_sold_date_sk = d_date_sk AND ss_store_sk = s_store_sk AND d_year IN (2002) AND ((i_category IN ('Children', 'Shoes', 'Women') AND i_class IN ('kids', 'swimwear', 'infants')) OR (i_category IN ('Men', 'Sports') AND i_class IN ('shirts'))) GROUP BY i_category, i_class, i_brand, s_store_name, s_company_name, d_moy
38	create table subquery45259 as SELECT * FROM (select * from subquery149722) AS tmp1 WHERE CASE WHEN (avg_monthly_sales <> 0) THEN (ABS(sum_sales - avg_monthly_sales) / avg_monthly_sales) ELSE NULL END > 0.1 ORDER BY sum_sales - avg_monthly_sales, s_store_name
38	SELECT * FROM (select * from subquery45259) WHERE rownum <= 100
38	create table subquery647233 as SELECT COUNT(*) AS pmc FROM web_sales, household_demographics, time_dim, web_page WHERE ws_sold_time_sk = time_dim.t_time_sk AND ws_ship_hdemo_sk = household_demographics.hd_demo_sk AND ws_web_page_sk = web_page.wp_web_page_sk AND time_dim.t_hour BETWEEN 15 AND 15 + 1 AND household_demographics.hd_dep_count = 4 AND web_page.wp_char_count BETWEEN 5000 AND 5200
38	create table subquery630443 as SELECT COUNT(*) AS amc FROM web_sales, household_demographics, time_dim, web_page WHERE ws_sold_time_sk = time_dim.t_time_sk AND ws_ship_hdemo_sk = household_demographics.hd_demo_sk AND ws_web_page_sk = web_page.wp_web_page_sk AND time_dim.t_hour BETWEEN 6 AND 6 + 1 AND household_demographics.hd_dep_count = 4 AND web_page.wp_char_count BETWEEN 5000 AND 5200
38	create table subquery946906 as SELECT CAST(amc AS DECIMAL(15, 4)) / CAST(pmc AS DECIMAL(15, 4)) AS am_pm_ratio FROM (select * from subquery630443) AS at, (select * from subquery647233) AS pt ORDER BY am_pm_ratio
38	SELECT * FROM (select * from subquery946906) WHERE rownum <= 100
38	SELECT cc_call_center_id AS Call_Center, cc_name AS Call_Center_Name, cc_manager AS Manager, SUM(cr_net_loss) AS Returns_Loss FROM call_center, catalog_returns, date_dim, customer, customer_address, customer_demographics, household_demographics WHERE cr_call_center_sk = cc_call_center_sk AND cr_returned_date_sk = d_date_sk AND cr_returning_customer_sk = c_customer_sk AND cd_demo_sk = c_current_cdemo_sk AND hd_demo_sk = c_current_hdemo_sk AND ca_address_sk = c_current_addr_sk AND d_year = 2001 AND d_moy = 12 AND ((cd_marital_status = 'M' AND cd_education_status = 'Unknown') OR (cd_marital_status = 'W' AND cd_education_status = 'Advanced Degree')) AND hd_buy_potential LIKE 'Unknown%' AND ca_gmt_offset = -6 GROUP BY cc_call_center_id, cc_name, cc_manager, cd_marital_status, cd_education_status ORDER BY SUM(cr_net_loss) DESC
66	create table subquery629387 as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_ext_sales_price) AS netpaid FROM store_sales, store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_current_addr_sk = ca_address_sk AND c_birth_country <> UPPER(ca_country) AND s_zip = ca_zip AND s_market_id = 5 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
66	create table subquery583770 as with ssales AS (select * from subquery629387) SELECT 0.05 * AVG(netpaid) FROM ssales
66	WITH ssales AS (select * from subquery629387) SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) AS paid FROM ssales WHERE i_color = 'green' GROUP BY c_last_name, c_first_name, s_store_name HAVING SUM(netpaid) > (select * from subquery583770) ORDER BY c_last_name, c_first_name, s_store_name
66	create table subquery339382 as SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_ext_sales_price) AS netpaid FROM store_sales, store_returns, store, item, customer, customer_address WHERE ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_customer_sk = c_customer_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND c_current_addr_sk = ca_address_sk AND c_birth_country <> UPPER(ca_country) AND s_zip = ca_zip AND s_market_id = 5 GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
66	create table subquery858746 as with ssales AS (select * from subquery339382) SELECT 0.05 * AVG(netpaid) FROM ssales
66	WITH ssales AS (select * from subquery339382) SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) AS paid FROM ssales WHERE i_color = 'sky' GROUP BY c_last_name, c_first_name, s_store_name HAVING SUM(netpaid) > (select * from subquery858746) ORDER BY c_last_name, c_first_name, s_store_name
66	create table subquery478645 as SELECT i_item_id, i_item_desc, s_store_id, s_store_name, STDDEV_SAMP(ss_net_profit) AS store_sales_profit, STDDEV_SAMP(sr_net_loss) AS store_returns_loss, STDDEV_SAMP(cs_net_profit) AS catalog_sales_profit FROM store_sales, store_returns, catalog_sales, date_dim AS d1, date_dim AS d2, date_dim AS d3, store, item WHERE d1.d_moy = 4 AND d1.d_year = 2000 AND d1.d_date_sk = ss_sold_date_sk AND i_item_sk = ss_item_sk AND s_store_sk = ss_store_sk AND ss_customer_sk = sr_customer_sk AND ss_item_sk = sr_item_sk AND ss_ticket_number = sr_ticket_number AND sr_returned_date_sk = d2.d_date_sk AND d2.d_moy BETWEEN 4 AND 10 AND d2.d_year = 2000 AND sr_customer_sk = cs_bill_customer_sk AND sr_item_sk = cs_item_sk AND cs_sold_date_sk = d3.d_date_sk AND d3.d_moy BETWEEN 4 AND 10 AND d3.d_year = 2000 GROUP BY i_item_id, i_item_desc, s_store_id, s_store_name ORDER BY i_item_id, i_item_desc, s_store_id, s_store_name
66	SELECT * FROM (select * from subquery478645) WHERE rownum <= 100
66	create table subquery294449 as SELECT i_item_id, AVG(cs_quantity) AS agg1, AVG(cs_list_price) AS agg2, AVG(cs_coupon_amt) AS agg3, AVG(cs_sales_price) AS agg4 FROM catalog_sales, customer_demographics, date_dim, item, promotion WHERE cs_sold_date_sk = d_date_sk AND cs_item_sk = i_item_sk AND cs_bill_cdemo_sk = cd_demo_sk AND cs_promo_sk = p_promo_sk AND cd_gender = 'M' AND cd_marital_status = 'S' AND cd_education_status = 'Advanced Degree' AND (p_channel_email = 'N' OR p_channel_event = 'N') AND d_year = 2001 GROUP BY i_item_id ORDER BY i_item_id
66	SELECT * FROM (select * from subquery294449) WHERE rownum <= 100
66	create table subquery464331 as SELECT i_item_id, s_state, GROUPING(s_state) AS g_state, AVG(ss_quantity) AS agg1, AVG(ss_list_price) AS agg2, AVG(ss_coupon_amt) AS agg3, AVG(ss_sales_price) AS agg4 FROM store_sales, customer_demographics, date_dim, store, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND ss_store_sk = s_store_sk AND ss_cdemo_sk = cd_demo_sk AND cd_gender = 'M' AND cd_marital_status = 'D' AND cd_education_status = '4 yr Degree' AND d_year = 2000 AND s_state IN ('TN', 'TN', 'TN') GROUP BY ROLLUP(i_item_id, s_state) ORDER BY i_item_id, s_state
66	SELECT * FROM (select * from subquery464331) WHERE rownum <= 100
52	create table subquery73214 as SELECT dt.d_year, item.i_brand_id AS brand_id, item.i_brand AS brand, SUM(ss_ext_sales_price) AS ext_price FROM date_dim AS dt, store_sales, item WHERE dt.d_date_sk = store_sales.ss_sold_date_sk AND store_sales.ss_item_sk = item.i_item_sk AND item.i_manager_id = 1 AND dt.d_moy = 12 AND dt.d_year = 1999 GROUP BY dt.d_year, item.i_brand, item.i_brand_id ORDER BY dt.d_year, ext_price DESC, brand_id
52	SELECT * FROM (select * from subquery73214) WHERE rownum <= 100
52	create table subquery797040 as SELECT i_manufact_id, SUM(ss_sales_price) AS sum_sales, AVG(SUM(ss_sales_price)) OVER(PARTITION BY i_manufact_id) AS avg_quarterly_sales FROM item, store_sales, date_dim, store WHERE ss_item_sk = i_item_sk AND ss_sold_date_sk = d_date_sk AND ss_store_sk = s_store_sk AND d_month_seq IN (1192 + 7, 1192 + 3, 1192 + 10, 1192 + 8, 1192 + 1, 1192 + 5) AND ((i_category IN ('Children', 'Books', 'Electronics') AND i_class IN ('portable', 'reference') AND i_brand IN ('scholaramalgamalg #9', 'scholaramalgamalg #14')) OR (i_category IN ('Women', 'Music', 'Men') AND i_class IN ('fragrances', 'pants') AND i_brand IN ('edu packscholar #1'))) GROUP BY i_manufact_id, d_qoy
52	create table subquery131196 as SELECT * FROM (select * from subquery797040) AS tmp1 WHERE CASE WHEN avg_quarterly_sales > 0 THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales ELSE NULL END > 0.1 ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
52	SELECT * FROM (select * from subquery131196) WHERE rownum <= 100
52	create table subquery518802 as SELECT ws_sold_date_sk AS sold_date_sk, ws_bill_customer_sk AS customer_sk, ws_item_sk AS item_sk FROM web_sales
52	create table subquery466282 as SELECT cs_sold_date_sk AS sold_date_sk, cs_bill_customer_sk AS customer_sk, cs_item_sk AS item_sk FROM catalog_sales
52	create table subquery695518 as SELECT DISTINCT c_customer_sk, c_current_addr_sk FROM (select * from subquery466282 UNION ALL select * from subquery518802) AS cs_or_ws_sales, item, date_dim, customer WHERE sold_date_sk = d_date_sk AND item_sk = i_item_sk AND i_category = 'Men' AND i_class = 'accessories' AND c_customer_sk = cs_or_ws_sales.customer_sk AND d_moy = 3 AND d_year = 1999
52	create table subquery292717 as SELECT DISTINCT d_month_seq + 3 FROM date_dim WHERE d_year = 1999 AND d_moy = 3
52	create table subquery304894 as SELECT DISTINCT d_month_seq + 1 FROM date_dim WHERE d_year = 1999 AND d_moy = 3
52	create table subquery111248 as with my_customers AS (select * from subquery695518) SELECT c_customer_sk, SUM(ss_ext_sales_price) AS revenue FROM my_customers, store_sales, customer_address, store, date_dim WHERE c_current_addr_sk = ca_address_sk AND ca_county = s_county AND ca_state = s_state AND ss_sold_date_sk = d_date_sk AND c_customer_sk = ss_customer_sk AND d_month_seq BETWEEN (select * from subquery304894) AND (select * from subquery292717) GROUP BY c_customer_sk
52	WITH my_customers AS (select * from subquery695518), my_revenue AS (select * from subquery111248), segments AS (SELECT CAST((revenue / 50) AS INT) AS segment FROM my_revenue) SELECT * FROM (SELECT segment, COUNT(*) AS num_customers, segment * 50 AS segment_base FROM segments GROUP BY segment ORDER BY segment, num_customers) WHERE rownum <= 100
52	create table subquery171957 as SELECT i_brand_id AS brand_id, i_brand AS brand, SUM(ss_ext_sales_price) AS ext_price FROM date_dim, store_sales, item WHERE d_date_sk = ss_sold_date_sk AND ss_item_sk = i_item_sk AND i_manager_id = 75 AND d_moy = 11 AND d_year = 1999 GROUP BY i_brand, i_brand_id ORDER BY ext_price DESC, i_brand_id
52	SELECT * FROM (select * from subquery171957) WHERE rownum <= 100
52	create table subquery586972 as SELECT i_item_id FROM item WHERE i_color IN ('maroon')
52	create table subquery673236 as select * from subquery586972
52	create table subquery701454 as SELECT i_item_id, SUM(ss_ext_sales_price) AS total_sales FROM store_sales, date_dim, customer_address, item WHERE i_item_id IN (select * from subquery673236) AND ss_item_sk = i_item_sk AND ss_sold_date_sk = d_date_sk AND d_year = 2002 AND d_moy = 1 AND ss_addr_sk = ca_address_sk AND ca_gmt_offset = -5 GROUP BY i_item_id
52	create table subquery151359 as SELECT i_item_id, SUM(cs_ext_sales_price) AS total_sales FROM catalog_sales, date_dim, customer_address, item WHERE i_item_id IN (select * from subquery673236) AND cs_item_sk = i_item_sk AND cs_sold_date_sk = d_date_sk AND d_year = 2002 AND d_moy = 1 AND cs_bill_addr_sk = ca_address_sk AND ca_gmt_offset = -5 GROUP BY i_item_id
52	create table subquery285971 as SELECT i_item_id FROM item WHERE i_color IN ('rosy', 'papaya', 'maroon')
52	create table subquery452090 as SELECT i_item_id, SUM(ws_ext_sales_price) AS total_sales FROM web_sales, date_dim, customer_address, item WHERE i_item_id IN (select * from subquery285971) AND ws_item_sk = i_item_sk AND ws_sold_date_sk = d_date_sk AND d_year = 2002 AND d_moy = 1 AND ws_bill_addr_sk = ca_address_sk AND ca_gmt_offset = -5 GROUP BY i_item_id
52	create table subquery717324 as with ws AS (select * from subquery452090) SELECT * FROM ws
52	create table subquery6903 as with cs AS (select * from subquery151359) SELECT * FROM cs
52	create table subquery874299 as with ss AS (select * from subquery701454) SELECT * FROM ss
52	create table subquery859994 as with ss AS (select * from subquery701454), cs AS (select * from subquery151359), ws AS (select * from subquery452090) SELECT i_item_id, SUM(total_sales) AS total_sales FROM (select * from subquery874299 UNION ALL select * from subquery6903 UNION ALL select * from subquery717324) AS tmp1 GROUP BY i_item_id ORDER BY total_sales, i_item_id
52	WITH ss AS (select * from subquery701454), cs AS (select * from subquery151359), ws AS (select * from subquery452090) SELECT * FROM (select * from subquery859994) WHERE rownum <= 100
5	create table subquery847973 as SELECT i_item_id, i_item_desc, i_category, i_class, i_current_price, SUM(cs_ext_sales_price) AS itemrevenue, SUM(cs_ext_sales_price) * 100 / SUM(SUM(cs_ext_sales_price)) OVER(PARTITION BY i_class) AS revenueratio FROM catalog_sales, item, date_dim WHERE cs_item_sk = i_item_sk AND i_category IN ('Sports') AND cs_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('2002-06-18' AS DATE) AND (CAST('2002-06-18' AS DATE) + 30) GROUP BY i_item_id, i_item_desc, i_category, i_class, i_current_price ORDER BY i_category, i_class, i_item_id, i_item_desc, revenueratio
5	SELECT * FROM (select * from subquery847973) WHERE rownum <= 100
5	create table subquery332818 as SELECT w_warehouse_name, i_item_id, SUM(CASE WHEN (CAST(d_date AS DATE) < CAST('1999-06-22' AS DATE)) THEN inv_quantity_on_hand ELSE 0 END) AS inv_before, SUM(CASE WHEN (CAST(d_date AS DATE) >= CAST('1999-06-22' AS DATE)) THEN inv_quantity_on_hand ELSE 0 END) AS inv_after FROM inventory, warehouse, item, date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = inv_item_sk AND inv_warehouse_sk = w_warehouse_sk AND inv_date_sk = d_date_sk AND d_date BETWEEN (CAST('1999-06-22' AS DATE) - 30) AND (CAST('1999-06-22' AS DATE) + 30) GROUP BY w_warehouse_name, i_item_id
5	create table subquery955189 as SELECT * FROM (select * from subquery332818) AS x WHERE (CASE WHEN inv_before > 0 THEN inv_after / inv_before ELSE NULL END) BETWEEN 2.0 / 3.0 AND 3.0 / 2.0 ORDER BY w_warehouse_name, i_item_id
5	SELECT * FROM (select * from subquery955189) WHERE rownum <= 100
5	create table subquery336087 as SELECT i_product_name, i_brand, i_class, i_category, AVG(inv_quantity_on_hand) AS qoh FROM inventory, date_dim, item WHERE inv_date_sk = d_date_sk AND inv_item_sk = i_item_sk AND d_month_seq BETWEEN 1200 AND 1200 + 11 GROUP BY ROLLUP(i_product_name, i_brand, i_class, i_category) ORDER BY qoh, i_product_name, i_brand, i_class, i_category
5	SELECT * FROM (select * from subquery336087) WHERE rownum <= 100
5	create table subquery842782 as SELECT SUBSTR(i_item_desc, 1, 30) AS itemdesc, i_item_sk AS item_sk, d_date AS solddate, COUNT(*) AS cnt FROM store_sales, date_dim, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND d_year IN (2000 + 1, 2000 + 2, 2000 + 3, 2000) GROUP BY SUBSTR(i_item_desc, 1, 30), i_item_sk, d_date HAVING COUNT(*) > 4
5	create table subquery848966 as SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS csales FROM store_sales, customer, date_dim WHERE ss_customer_sk = c_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN (2000 + 2) GROUP BY c_customer_sk
5	create table subquery899509 as SELECT MAX(csales) AS tpcds_cmax FROM (select * from subquery848966)
5	create table subquery344815 as with max_store_sales AS (select * from subquery899509) SELECT * FROM max_store_sales
5	create table subquery253454 as with max_store_sales AS (select * from subquery899509) SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS ssales FROM store_sales, customer WHERE ss_customer_sk = c_customer_sk GROUP BY c_customer_sk HAVING SUM(ss_quantity * ss_sales_price) > (95 / 100.0) * (select * from subquery344815)
5	create table subquery782445 as with frequent_ss_items AS (select * from subquery842782) SELECT item_sk FROM frequent_ss_items
5	create table subquery901918 as with frequent_ss_items AS (select * from subquery842782) select * from subquery782445
5	WITH frequent_ss_items AS (select * from subquery842782), max_store_sales AS (select * from subquery899509), best_ss_customer AS (select * from subquery253454) SELECT * FROM (SELECT SUM(sales) FROM (SELECT cs_quantity * cs_list_price AS sales FROM catalog_sales, date_dim WHERE d_year = 2000 AND d_moy = 7 AND cs_sold_date_sk = d_date_sk AND cs_item_sk IN (select * from subquery901918) AND cs_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) UNION ALL SELECT ws_quantity * ws_list_price AS sales FROM web_sales, date_dim WHERE d_year = 2000 AND d_moy = 7 AND ws_sold_date_sk = d_date_sk AND ws_item_sk IN (select * from subquery901918) AND ws_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer))) WHERE rownum <= 100
5	create table subquery550808 as SELECT SUBSTR(i_item_desc, 1, 30) AS itemdesc, i_item_sk AS item_sk, d_date AS solddate, COUNT(*) AS cnt FROM store_sales, date_dim, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND d_year IN (2000 + 2, 2000 + 1) GROUP BY SUBSTR(i_item_desc, 1, 30), i_item_sk, d_date HAVING COUNT(*) > 4
5	create table subquery876215 as SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS csales FROM store_sales, customer, date_dim WHERE ss_customer_sk = c_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN (2000 + 2) GROUP BY c_customer_sk
5	create table subquery710939 as SELECT MAX(csales) AS tpcds_cmax FROM (select * from subquery876215)
5	create table subquery518286 as with max_store_sales AS (select * from subquery710939) SELECT * FROM max_store_sales
5	create table subquery294959 as with max_store_sales AS (select * from subquery710939) SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS ssales FROM store_sales, customer WHERE ss_customer_sk = c_customer_sk GROUP BY c_customer_sk HAVING SUM(ss_quantity * ss_sales_price) > (95 / 100.0) * (select * from subquery518286)
5	create table subquery93017 as with frequent_ss_items AS (select * from subquery550808) SELECT item_sk FROM frequent_ss_items
5	create table subquery305643 as with frequent_ss_items AS (select * from subquery550808) select * from subquery93017
5	WITH frequent_ss_items AS (select * from subquery550808), max_store_sales AS (select * from subquery710939), best_ss_customer AS (select * from subquery294959) SELECT * FROM (SELECT c_last_name, c_first_name, sales FROM (SELECT c_last_name, c_first_name, SUM(cs_quantity * cs_list_price) AS sales FROM catalog_sales, customer, date_dim WHERE d_year = 2000 AND d_moy = 7 AND cs_sold_date_sk = d_date_sk AND cs_item_sk IN (select * from subquery305643) AND cs_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) AND cs_bill_customer_sk = c_customer_sk GROUP BY c_last_name, c_first_name UNION ALL SELECT c_last_name, c_first_name, SUM(ws_quantity * ws_list_price) AS sales FROM web_sales, customer, date_dim WHERE d_year = 2000 AND d_moy = 7 AND ws_sold_date_sk = d_date_sk AND ws_item_sk IN (select * from subquery305643) AND ws_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) AND ws_bill_customer_sk = c_customer_sk GROUP BY c_last_name, c_first_name) ORDER BY c_last_name, c_first_name, sales) WHERE rownum <= 100
21	create table subquery448883 as SELECT sr_customer_sk AS ctr_customer_sk, sr_store_sk AS ctr_store_sk, SUM(SR_RETURN_AMT) AS ctr_total_return FROM store_returns, date_dim WHERE sr_returned_date_sk = d_date_sk AND d_year = 2002 GROUP BY sr_customer_sk, sr_store_sk
21	create table subquery941201 as with customer_total_return AS (select * from subquery448883) SELECT c_customer_id FROM customer_total_return AS ctr1, store, customer WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return) * 1.2 FROM customer_total_return AS ctr2 WHERE ctr1.ctr_store_sk = ctr2.ctr_store_sk) AND s_store_sk = ctr1.ctr_store_sk AND s_state = 'TN' AND ctr1.ctr_customer_sk = c_customer_sk ORDER BY c_customer_id
21	WITH customer_total_return AS (select * from subquery448883) SELECT * FROM (select * from subquery941201) WHERE rownum <= 100
21	create table subquery684288 as SELECT cs_sold_date_sk AS sold_date_sk, cs_ext_sales_price AS sales_price FROM catalog_sales
21	create table subquery329122 as SELECT ws_sold_date_sk AS sold_date_sk, ws_ext_sales_price AS sales_price FROM web_sales
21	create table subquery81250 as SELECT sold_date_sk, sales_price FROM (select * from subquery329122 UNION ALL select * from subquery684288)
21	create table subquery940808 as with wscs AS (select * from subquery81250) SELECT d_week_seq, SUM(CASE WHEN (d_day_name = 'Sunday') THEN sales_price ELSE NULL END) AS sun_sales, SUM(CASE WHEN (d_day_name = 'Monday') THEN sales_price ELSE NULL END) AS mon_sales, SUM(CASE WHEN (d_day_name = 'Tuesday') THEN sales_price ELSE NULL END) AS tue_sales, SUM(CASE WHEN (d_day_name = 'Wednesday') THEN sales_price ELSE NULL END) AS wed_sales, SUM(CASE WHEN (d_day_name = 'Thursday') THEN sales_price ELSE NULL END) AS thu_sales, SUM(CASE WHEN (d_day_name = 'Friday') THEN sales_price ELSE NULL END) AS fri_sales, SUM(CASE WHEN (d_day_name = 'Saturday') THEN sales_price ELSE NULL END) AS sat_sales FROM wscs, date_dim WHERE d_date_sk = sold_date_sk GROUP BY d_week_seq
21	WITH wscs AS (select * from subquery81250), wswscs AS (select * from subquery940808) SELECT d_week_seq1, ROUND(sun_sales1 / sun_sales2, 2), ROUND(mon_sales1 / mon_sales2, 2), ROUND(tue_sales1 / tue_sales2, 2), ROUND(wed_sales1 / wed_sales2, 2), ROUND(thu_sales1 / thu_sales2, 2), ROUND(fri_sales1 / fri_sales2, 2), ROUND(sat_sales1 / sat_sales2, 2) FROM (SELECT wswscs.d_week_seq AS d_week_seq1, sun_sales AS sun_sales1, mon_sales AS mon_sales1, tue_sales AS tue_sales1, wed_sales AS wed_sales1, thu_sales AS thu_sales1, fri_sales AS fri_sales1, sat_sales AS sat_sales1 FROM wswscs, date_dim WHERE date_dim.d_week_seq = wswscs.d_week_seq AND d_year = 2000) AS y, (SELECT wswscs.d_week_seq AS d_week_seq2, sun_sales AS sun_sales2, mon_sales AS mon_sales2, tue_sales AS tue_sales2, wed_sales AS wed_sales2, thu_sales AS thu_sales2, fri_sales AS fri_sales2, sat_sales AS sat_sales2 FROM wswscs, date_dim WHERE date_dim.d_week_seq = wswscs.d_week_seq AND d_year = 2000 + 1) AS z WHERE d_week_seq1 = d_week_seq2 - 53 ORDER BY d_week_seq1
21	create table subquery572822 as SELECT dt.d_year, item.i_brand_id AS brand_id, item.i_brand AS brand, SUM(ss_ext_sales_price) AS sum_agg FROM date_dim AS dt, store_sales, item WHERE dt.d_date_sk = store_sales.ss_sold_date_sk AND store_sales.ss_item_sk = item.i_item_sk AND item.i_manufact_id = 931 AND dt.d_moy = 11 GROUP BY dt.d_year, item.i_brand, item.i_brand_id ORDER BY dt.d_year, sum_agg DESC, brand_id
21	SELECT * FROM (select * from subquery572822) WHERE rownum <= 100
21	create table subquery798782 as SELECT c_customer_id AS customer_id, c_first_name AS customer_first_name, c_last_name AS customer_last_name, c_preferred_cust_flag AS customer_preferred_cust_flag, c_birth_country AS customer_birth_country, c_login AS customer_login, c_email_address AS customer_email_address, d_year AS dyear, SUM((((ws_ext_list_price - ws_ext_wholesale_cost - ws_ext_discount_amt) + ws_ext_sales_price) / 2)) AS year_total, 'w' AS sale_type FROM customer, web_sales, date_dim WHERE c_customer_sk = ws_bill_customer_sk AND ws_sold_date_sk = d_date_sk GROUP BY c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_country, c_login, c_email_address, d_year
21	create table subquery737161 as SELECT c_customer_id AS customer_id, c_first_name AS customer_first_name, c_last_name AS customer_last_name, c_preferred_cust_flag AS customer_preferred_cust_flag, c_birth_country AS customer_birth_country, c_login AS customer_login, c_email_address AS customer_email_address, d_year AS dyear, SUM((((cs_ext_list_price - cs_ext_wholesale_cost - cs_ext_discount_amt) + cs_ext_sales_price) / 2)) AS year_total, 'c' AS sale_type FROM customer, catalog_sales, date_dim WHERE c_customer_sk = cs_bill_customer_sk AND cs_sold_date_sk = d_date_sk GROUP BY c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_country, c_login, c_email_address, d_year
21	create table subquery673024 as SELECT c_customer_id AS customer_id, c_first_name AS customer_first_name, c_last_name AS customer_last_name, c_preferred_cust_flag AS customer_preferred_cust_flag, c_birth_country AS customer_birth_country, c_login AS customer_login, c_email_address AS customer_email_address, d_year AS dyear, SUM(((ss_ext_list_price - ss_ext_wholesale_cost - ss_ext_discount_amt) + ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer, store_sales, date_dim WHERE c_customer_sk = ss_customer_sk AND ss_sold_date_sk = d_date_sk GROUP BY c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_country, c_login, c_email_address, d_year
21	create table subquery472594 as with year_total AS (select * from subquery673024 UNION ALL select * from subquery737161 UNION ALL select * from subquery798782) SELECT t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_login FROM year_total AS t_s_firstyear, year_total AS t_s_secyear, year_total AS t_c_firstyear, year_total AS t_c_secyear, year_total AS t_w_firstyear, year_total AS t_w_secyear WHERE t_s_secyear.customer_id = t_s_firstyear.customer_id AND t_s_firstyear.customer_id = t_c_secyear.customer_id AND t_s_firstyear.customer_id = t_c_firstyear.customer_id AND t_s_firstyear.customer_id = t_w_firstyear.customer_id AND t_s_firstyear.customer_id = t_w_secyear.customer_id AND t_s_firstyear.sale_type = 's' AND t_c_firstyear.sale_type = 'c' AND t_w_firstyear.sale_type = 'w' AND t_s_secyear.sale_type = 's' AND t_c_secyear.sale_type = 'c' AND t_w_secyear.sale_type = 'w' AND t_s_firstyear.dyear = 2001 AND t_s_secyear.dyear = 2001 + 1 AND t_c_firstyear.dyear = 2001 AND t_c_secyear.dyear = 2001 + 1 AND t_w_firstyear.dyear = 2001 AND t_w_secyear.dyear = 2001 + 1 AND t_s_firstyear.year_total > 0 AND t_c_firstyear.year_total > 0 AND t_w_firstyear.year_total > 0 AND CASE WHEN t_c_firstyear.year_total > 0 THEN t_c_secyear.year_total / t_c_firstyear.year_total ELSE NULL END > CASE WHEN t_s_firstyear.year_total > 0 THEN t_s_secyear.year_total / t_s_firstyear.year_total ELSE NULL END AND CASE WHEN t_c_firstyear.year_total > 0 THEN t_c_secyear.year_total / t_c_firstyear.year_total ELSE NULL END > CASE WHEN t_w_firstyear.year_total > 0 THEN t_w_secyear.year_total / t_w_firstyear.year_total ELSE NULL END ORDER BY t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_login
21	WITH year_total AS (select * from subquery673024 UNION ALL select * from subquery737161 UNION ALL select * from subquery798782) SELECT * FROM (select * from subquery472594) WHERE rownum <= 100
21	create table subquery796424 as SELECT sr_store_sk AS store_sk, sr_returned_date_sk AS date_sk, CAST(0 AS DECIMAL(7, 2)) AS sales_price, CAST(0 AS DECIMAL(7, 2)) AS profit, sr_return_amt AS return_amt, sr_net_loss AS net_loss FROM store_returns
21	create table subquery207438 as SELECT ss_store_sk AS store_sk, ss_sold_date_sk AS date_sk, ss_ext_sales_price AS sales_price, ss_net_profit AS profit, CAST(0 AS DECIMAL(7, 2)) AS return_amt, CAST(0 AS DECIMAL(7, 2)) AS net_loss FROM store_sales
21	create table subquery1288 as SELECT s_store_id, SUM(sales_price) AS sales, SUM(profit) AS profit, SUM(return_amt) AS returns, SUM(net_loss) AS profit_loss FROM (select * from subquery207438 UNION ALL select * from subquery796424) AS salesreturns, date_dim, store WHERE date_sk = d_date_sk AND d_date BETWEEN CAST('2002-08-27' AS DATE) AND (CAST('2002-08-27' AS DATE) + 14) AND store_sk = s_store_sk GROUP BY s_store_id
21	create table subquery381075 as SELECT cr_catalog_page_sk AS page_sk, cr_returned_date_sk AS date_sk, CAST(0 AS DECIMAL(7, 2)) AS sales_price, CAST(0 AS DECIMAL(7, 2)) AS profit, cr_return_amount AS return_amt, cr_net_loss AS net_loss FROM catalog_returns
21	create table subquery536614 as SELECT cs_catalog_page_sk AS page_sk, cs_sold_date_sk AS date_sk, cs_ext_sales_price AS sales_price, cs_net_profit AS profit, CAST(0 AS DECIMAL(7, 2)) AS return_amt, CAST(0 AS DECIMAL(7, 2)) AS net_loss FROM catalog_sales
21	create table subquery552081 as SELECT cp_catalog_page_id, SUM(sales_price) AS sales, SUM(profit) AS profit, SUM(return_amt) AS returns, SUM(net_loss) AS profit_loss FROM (select * from subquery536614 UNION ALL select * from subquery381075) AS salesreturns, date_dim, catalog_page WHERE date_sk = d_date_sk AND d_date BETWEEN CAST('2002-08-27' AS DATE) AND (CAST('2002-08-27' AS DATE) + 14) AND page_sk = cp_catalog_page_sk GROUP BY cp_catalog_page_id
21	create table subquery790847 as SELECT ws_web_site_sk AS wsr_web_site_sk, wr_returned_date_sk AS date_sk, CAST(0 AS DECIMAL(7, 2)) AS sales_price, CAST(0 AS DECIMAL(7, 2)) AS profit, wr_return_amt AS return_amt, wr_net_loss AS net_loss FROM web_returns LEFT OUTER JOIN web_sales ON (wr_item_sk = ws_item_sk AND wr_order_number = ws_order_number)
21	create table subquery369409 as SELECT ws_web_site_sk AS wsr_web_site_sk, ws_sold_date_sk AS date_sk, ws_ext_sales_price AS sales_price, ws_net_profit AS profit, CAST(0 AS DECIMAL(7, 2)) AS return_amt, CAST(0 AS DECIMAL(7, 2)) AS net_loss FROM web_sales
21	create table subquery185852 as SELECT web_site_id, SUM(sales_price) AS sales, SUM(profit) AS profit, SUM(return_amt) AS returns, SUM(net_loss) AS profit_loss FROM (select * from subquery369409 UNION ALL select * from subquery790847) AS salesreturns, date_dim, web_site WHERE date_sk = d_date_sk AND d_date BETWEEN CAST('2002-08-27' AS DATE) AND (CAST('2002-08-27' AS DATE) + 14) AND wsr_web_site_sk = web_site_sk GROUP BY web_site_id
21	create table subquery228376 as with wsr AS (select * from subquery185852) SELECT 'web channel' AS channel, 'web_site' || web_site_id AS id, sales, returns, (profit - profit_loss) AS profit FROM wsr
21	create table subquery383703 as with csr AS (select * from subquery552081) SELECT 'catalog channel' AS channel, 'catalog_page' || cp_catalog_page_id AS id, sales, returns, (profit - profit_loss) AS profit FROM csr
21	create table subquery425789 as with ssr AS (select * from subquery1288) SELECT 'store channel' AS channel, 'store' || s_store_id AS id, sales, returns, (profit - profit_loss) AS profit FROM ssr
21	create table subquery573769 as with ssr AS (select * from subquery1288), csr AS (select * from subquery552081), wsr AS (select * from subquery185852) SELECT channel, id, SUM(sales) AS sales, SUM(returns) AS returns, SUM(profit) AS profit FROM (select * from subquery425789 UNION ALL select * from subquery383703 UNION ALL select * from subquery228376) AS x GROUP BY ROLLUP(channel, id) ORDER BY channel, id
21	WITH ssr AS (select * from subquery1288), csr AS (select * from subquery552081), wsr AS (select * from subquery185852) SELECT * FROM (select * from subquery573769) WHERE rownum <= 100
39	create table subquery434547 as SELECT SUM(ws_ext_discount_amt) AS "Excess Discount Amount" FROM web_sales, item, date_dim WHERE i_manufact_id = 428 AND i_item_sk = ws_item_sk AND d_date BETWEEN '1999-03-16' AND (CAST('1999-03-16' AS DATE) + 90) AND d_date_sk = ws_sold_date_sk AND ws_ext_discount_amt > (SELECT 1.3 * AVG(ws_ext_discount_amt) FROM web_sales, date_dim WHERE ws_item_sk = i_item_sk AND d_date BETWEEN '1999-03-16' AND (CAST('1999-03-16' AS DATE) + 90) AND d_date_sk = ws_sold_date_sk) ORDER BY SUM(ws_ext_discount_amt)
39	SELECT * FROM (select * from subquery434547) WHERE rownum <= 100
39	create table subquery373304 as SELECT COUNT(DISTINCT ws_order_number) AS "order count", SUM(ws_ext_ship_cost) AS "total shipping cost", SUM(ws_net_profit) AS "total net profit" FROM web_sales AS ws1, date_dim, customer_address, web_site WHERE d_date BETWEEN '2002-5-01' AND (CAST('2002-5-01' AS DATE) + 60) AND ws1.ws_ship_date_sk = d_date_sk AND ws1.ws_ship_addr_sk = ca_address_sk AND ca_state = 'AR' AND ws1.ws_web_site_sk = web_site_sk AND web_company_name = 'pri' AND EXISTS(SELECT * FROM web_sales AS ws2 WHERE ws1.ws_order_number = ws2.ws_order_number AND ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk) AND NOT EXISTS(SELECT * FROM web_returns AS wr1 WHERE ws1.ws_order_number = wr1.wr_order_number) ORDER BY COUNT(DISTINCT ws_order_number)
39	SELECT * FROM (select * from subquery373304) WHERE rownum <= 100
39	create table subquery923420 as SELECT ws1.ws_order_number, ws1.ws_warehouse_sk AS wh1, ws2.ws_warehouse_sk AS wh2 FROM web_sales AS ws1, web_sales AS ws2 WHERE ws1.ws_order_number = ws2.ws_order_number AND ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk
39	create table subquery500633 as with ws_wh AS (select * from subquery923420) SELECT ws_order_number FROM ws_wh
39	create table subquery312871 as with ws_wh AS (select * from subquery923420) SELECT wr_order_number FROM web_returns, ws_wh WHERE wr_order_number = ws_wh.ws_order_number
39	create table subquery507688 as with ws_wh AS (select * from subquery923420) SELECT COUNT(DISTINCT ws_order_number) AS "order count", SUM(ws_ext_ship_cost) AS "total shipping cost", SUM(ws_net_profit) AS "total net profit" FROM web_sales AS ws1, date_dim, customer_address, web_site WHERE d_date BETWEEN '2001-2-01' AND (CAST('2001-2-01' AS DATE) + 60) AND ws1.ws_ship_date_sk = d_date_sk AND ws1.ws_ship_addr_sk = ca_address_sk AND ca_state = 'NE' AND ws1.ws_web_site_sk = web_site_sk AND web_company_name = 'pri' AND ws1.ws_order_number IN (select * from subquery500633) AND ws1.ws_order_number IN (select * from subquery312871) ORDER BY COUNT(DISTINCT ws_order_number)
39	WITH ws_wh AS (select * from subquery923420) SELECT * FROM (select * from subquery507688) WHERE rownum <= 100
39	create table subquery639544 as SELECT COUNT(*) FROM store_sales, household_demographics, time_dim, store WHERE ss_sold_time_sk = time_dim.t_time_sk AND ss_hdemo_sk = household_demographics.hd_demo_sk AND ss_store_sk = s_store_sk AND time_dim.t_hour = 20 AND time_dim.t_minute >= 30 AND household_demographics.hd_dep_count = 6 AND store.s_store_name = 'ese' ORDER BY COUNT(*)
39	SELECT * FROM (select * from subquery639544) WHERE rownum <= 100
10	create table subquery19870 as SELECT dt.d_year, item.i_category_id, item.i_category, SUM(ss_ext_sales_price) FROM date_dim AS dt, store_sales, item WHERE dt.d_date_sk = store_sales.ss_sold_date_sk AND store_sales.ss_item_sk = item.i_item_sk AND item.i_manager_id = 1 AND dt.d_moy = 11 AND dt.d_year = 1998 GROUP BY dt.d_year, item.i_category_id, item.i_category ORDER BY SUM(ss_ext_sales_price) DESC, dt.d_year, item.i_category_id, item.i_category
10	SELECT * FROM (select * from subquery19870) WHERE rownum <= 100
10	create table subquery933215 as SELECT s_store_name, s_store_id, SUM(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) AS sun_sales, SUM(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) AS mon_sales, SUM(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) AS tue_sales, SUM(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) AS wed_sales, SUM(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) AS thu_sales, SUM(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) AS fri_sales, SUM(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) AS sat_sales FROM date_dim, store_sales, store WHERE d_date_sk = ss_sold_date_sk AND s_store_sk = ss_store_sk AND s_gmt_offset = -5 AND d_year = 2000 GROUP BY s_store_name, s_store_id ORDER BY s_store_name, s_store_id, sun_sales, mon_sales, tue_sales, wed_sales, thu_sales, fri_sales, sat_sales
10	SELECT * FROM (select * from subquery933215) WHERE rownum <= 100
10	create table subquery268110 as SELECT AVG(ss_net_profit) AS rank_col FROM store_sales WHERE ss_store_sk = 4 AND ss_hdemo_sk IS NULL GROUP BY ss_store_sk
10	create table subquery891203 as select * from subquery268110
10	create table subquery227878 as SELECT ss_item_sk AS item_sk, AVG(ss_net_profit) AS rank_col FROM store_sales AS ss1 WHERE ss_store_sk = 4 GROUP BY ss_item_sk HAVING AVG(ss_net_profit) > 0.9 * (select * from subquery891203)
10	create table subquery62205 as select * from subquery227878
10	create table subquery908247 as SELECT item_sk, RANK() OVER(ORDER BY rank_col DESC) AS rnk FROM (select * from subquery62205) AS V2
10	create table subquery453837 as SELECT item_sk, RANK() OVER(ORDER BY rank_col) AS rnk FROM (select * from subquery62205) AS V1
10	create table subquery709868 as SELECT * FROM (select * from subquery908247) AS V21 WHERE rnk < 11
10	create table subquery295543 as SELECT * FROM (select * from subquery453837) AS V11 WHERE rnk < 11
10	create table subquery282309 as SELECT asceding.rnk, i1.i_product_name AS best_performing, i2.i_product_name AS worst_performing FROM (select * from subquery295543) AS asceding, (select * from subquery709868) AS descending, item AS i1, item AS i2 WHERE asceding.rnk = descending.rnk AND i1.i_item_sk = asceding.item_sk AND i2.i_item_sk = descending.item_sk ORDER BY asceding.rnk
10	SELECT * FROM (select * from subquery282309) WHERE rownum <= 100
10	create table subquery908095 as SELECT i_item_id FROM item WHERE i_item_sk IN (7, 11, 29, 2, 13, 5, 3, 17)
10	create table subquery710408 as SELECT ca_zip, ca_city, SUM(ws_sales_price) FROM web_sales, customer, customer_address, date_dim, item WHERE ws_bill_customer_sk = c_customer_sk AND c_current_addr_sk = ca_address_sk AND ws_item_sk = i_item_sk AND (SUBSTR(ca_zip, 1, 5) IN ('88274', '86197', '85669', '85460', '80348', '86475', '83405', '85392', '81792') OR i_item_id IN (select * from subquery908095)) AND ws_sold_date_sk = d_date_sk AND d_qoy = 1 AND d_year = 2000 GROUP BY ca_zip, ca_city ORDER BY ca_zip, ca_city
10	SELECT * FROM (select * from subquery710408) WHERE rownum <= 100
10	create table subquery779088 as SELECT ss_ticket_number, ss_customer_sk, ca_city AS bought_city, SUM(ss_coupon_amt) AS amt, SUM(ss_net_profit) AS profit FROM store_sales, date_dim, store, household_demographics, customer_address WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_store_sk = store.s_store_sk AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND store_sales.ss_addr_sk = customer_address.ca_address_sk AND (household_demographics.hd_dep_count = 8 OR household_demographics.hd_vehicle_count = 0) AND date_dim.d_dow IN (0, 6) AND date_dim.d_year IN (2000 + 2, 2000 + 1) AND store.s_city IN ('Midway') GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
10	create table subquery353433 as SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, amt, profit FROM (select * from subquery779088) AS dn, customer, customer_address AS current_addr WHERE ss_customer_sk = c_customer_sk AND customer.c_current_addr_sk = current_addr.ca_address_sk AND current_addr.ca_city <> bought_city ORDER BY c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number
10	SELECT * FROM (select * from subquery353433) WHERE rownum <= 100
11	create table subquery263421 as SELECT i_category, i_brand, s_store_name, s_company_name, d_year, d_moy, SUM(ss_sales_price) AS sum_sales, AVG(SUM(ss_sales_price)) OVER(PARTITION BY i_category, i_brand, s_store_name, s_company_name, d_year) AS avg_monthly_sales, RANK() OVER(PARTITION BY i_category, i_brand, s_store_name, s_company_name ORDER BY d_year, d_moy) AS rn FROM item, store_sales, date_dim, store WHERE ss_item_sk = i_item_sk AND ss_sold_date_sk = d_date_sk AND ss_store_sk = s_store_sk AND (d_year = 2000 OR (d_year = 2000 - 1 AND d_moy = 12) OR (d_year = 2000 + 1 AND d_moy = 1)) GROUP BY i_category, i_brand, s_store_name, s_company_name, d_year, d_moy
11	create table subquery434996 as with v1 AS (select * from subquery263421) SELECT v1.s_store_name, v1.s_company_name, v1.d_year, v1.avg_monthly_sales, v1.sum_sales, v1_lag.sum_sales AS psum, v1_lead.sum_sales AS nsum FROM v1, v1 AS v1_lag, v1 AS v1_lead WHERE v1.i_category = v1_lag.i_category AND v1.i_category = v1_lead.i_category AND v1.i_brand = v1_lag.i_brand AND v1.i_brand = v1_lead.i_brand AND v1.s_store_name = v1_lag.s_store_name AND v1.s_store_name = v1_lead.s_store_name AND v1.s_company_name = v1_lag.s_company_name AND v1.s_company_name = v1_lead.s_company_name AND v1.rn = v1_lag.rn + 1 AND v1.rn = v1_lead.rn - 1
11	WITH v1 AS (select * from subquery263421), v2 AS (select * from subquery434996) SELECT * FROM (SELECT * FROM v2 WHERE d_year = 2000 AND avg_monthly_sales > 0 AND CASE WHEN avg_monthly_sales > 0 THEN ABS(sum_sales - avg_monthly_sales) / avg_monthly_sales ELSE NULL END > 0.1 ORDER BY sum_sales - avg_monthly_sales, nsum) WHERE rownum <= 100
11	SELECT SUM(ss_quantity) FROM store_sales, store, customer_demographics, customer_address, date_dim WHERE s_store_sk = ss_store_sk AND ss_sold_date_sk = d_date_sk AND d_year = 2001 AND ((cd_demo_sk = ss_cdemo_sk AND cd_marital_status = 'S' AND cd_education_status = 'Secondary' AND ss_sales_price BETWEEN 100.00 AND 150.00) OR (cd_demo_sk = ss_cdemo_sk AND cd_marital_status = 'M' AND cd_education_status = '2 yr Degree' AND ss_sales_price BETWEEN 50.00 AND 100.00) OR (cd_demo_sk = ss_cdemo_sk AND cd_marital_status = 'D' AND cd_education_status = 'Advanced Degree' AND ss_sales_price BETWEEN 150.00 AND 200.00)) AND ((ss_addr_sk = ca_address_sk AND ca_country = 'United States' AND ca_state IN ('ND') AND ss_net_profit BETWEEN 0 AND 2000) OR (ss_addr_sk = ca_address_sk AND ca_country = 'United States' AND ca_state IN ('KS', 'GA', 'MD') AND ss_net_profit BETWEEN 150 AND 3000) OR (ss_addr_sk = ca_address_sk AND ca_country = 'United States' AND ca_state IN ('NC', 'CO', 'MN') AND ss_net_profit BETWEEN 50 AND 25000))
11	create table subquery564905 as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk <= 30) THEN 1 ELSE 0 END) AS "30 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 30) AND (sr_returned_date_sk - ss_sold_date_sk <= 60) THEN 1 ELSE 0 END) AS "31-60 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 60) AND (sr_returned_date_sk - ss_sold_date_sk <= 90) THEN 1 ELSE 0 END) AS "61-90 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 90) AND (sr_returned_date_sk - ss_sold_date_sk <= 120) THEN 1 ELSE 0 END) AS "91-120 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 120) THEN 1 ELSE 0 END) AS ">120 days" FROM store_sales, store_returns, store, date_dim AS d1, date_dim AS d2 WHERE d2.d_year = 2001 AND d2.d_moy = 8 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
11	SELECT * FROM (select * from subquery564905) WHERE rownum <= 100
11	create table subquery391210 as SELECT ws_item_sk AS item_sk, d_date, SUM(SUM(ws_sales_price)) OVER(PARTITION BY ws_item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS cume_sales FROM web_sales, date_dim WHERE ws_sold_date_sk = d_date_sk AND d_month_seq BETWEEN 1212 AND 1212 + 11 AND NOT ws_item_sk IS NULL GROUP BY ws_item_sk, d_date
11	create table subquery126374 as SELECT ss_item_sk AS item_sk, d_date, SUM(SUM(ss_sales_price)) OVER(PARTITION BY ss_item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS cume_sales FROM store_sales, date_dim WHERE ss_sold_date_sk = d_date_sk AND d_month_seq BETWEEN 1212 AND 1212 + 11 AND NOT ss_item_sk IS NULL GROUP BY ss_item_sk, d_date
11	create table subquery557670 as with web_v1 AS (select * from subquery391210), store_v1 AS (select * from subquery126374) SELECT CASE WHEN NOT web.item_sk IS NULL THEN web.item_sk ELSE store.item_sk END AS item_sk, CASE WHEN NOT web.d_date IS NULL THEN web.d_date ELSE store.d_date END AS d_date, web.cume_sales AS web_sales, store.cume_sales AS store_sales FROM web_v1 AS web FULL OUTER JOIN store_v1 AS store ON (web.item_sk = store.item_sk AND web.d_date = store.d_date)
11	create table subquery140849 as with web_v1 AS (select * from subquery391210), store_v1 AS (select * from subquery126374) SELECT item_sk, d_date, web_sales, store_sales, MAX(web_sales) OVER(PARTITION BY item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS web_cumulative, MAX(store_sales) OVER(PARTITION BY item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS store_cumulative FROM (select * from subquery557670) AS x
11	create table subquery248298 as with web_v1 AS (select * from subquery391210), store_v1 AS (select * from subquery126374) SELECT * FROM (select * from subquery140849) AS y WHERE web_cumulative > store_cumulative ORDER BY item_sk, d_date
11	WITH web_v1 AS (select * from subquery391210), store_v1 AS (select * from subquery126374) SELECT * FROM (select * from subquery248298) WHERE rownum <= 100
82	create table subquery17039 as SELECT DISTINCT (d_month_seq) FROM date_dim WHERE d_year = 2000 AND d_moy = 7
82	create table subquery994583 as SELECT a.ca_state AS state, COUNT(*) AS cnt FROM customer_address AS a, customer AS c, store_sales AS s, date_dim AS d, item AS i WHERE a.ca_address_sk = c.c_current_addr_sk AND c.c_customer_sk = s.ss_customer_sk AND s.ss_sold_date_sk = d.d_date_sk AND s.ss_item_sk = i.i_item_sk AND d.d_month_seq = (select * from subquery17039) AND i.i_current_price > 1.2 * (SELECT AVG(j.i_current_price) FROM item AS j WHERE j.i_category = i.i_category) GROUP BY a.ca_state HAVING COUNT(*) >= 10 ORDER BY cnt, a.ca_state
82	SELECT * FROM (select * from subquery994583) WHERE rownum <= 100
82	create table subquery697822 as SELECT i_item_id, AVG(ss_quantity) AS agg1, AVG(ss_list_price) AS agg2, AVG(ss_coupon_amt) AS agg3, AVG(ss_sales_price) AS agg4 FROM store_sales, customer_demographics, date_dim, item, promotion WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND ss_cdemo_sk = cd_demo_sk AND ss_promo_sk = p_promo_sk AND cd_gender = 'M' AND cd_marital_status = 'W' AND cd_education_status = 'Primary' AND (p_channel_email = 'N' OR p_channel_event = 'N') AND d_year = 2001 GROUP BY i_item_id ORDER BY i_item_id
82	SELECT * FROM (select * from subquery697822) WHERE rownum <= 100
82	create table subquery633779 as SELECT SUBSTR(ca_zip, 1, 5) AS ca_zip, COUNT(*) AS cnt FROM customer_address, customer WHERE ca_address_sk = c_current_addr_sk AND c_preferred_cust_flag = 'Y' GROUP BY ca_zip HAVING COUNT(*) > 10
82	create table subquery762315 as SELECT ca_zip FROM (select * from subquery633779) AS A1
82	create table subquery910142 as SELECT SUBSTR(ca_zip, 1, 5) AS ca_zip FROM customer_address WHERE SUBSTR(ca_zip, 1, 5) IN ('45668', '76354', '81597', '53104', '83327', '71160', '16202', '72223', '56234', '78657', '62685', '69606', '26439', '71477', '36328', '59828', '60747', '97403', '18089', '10060', '22229', '46524', '54122', '48813', '84953', '34065', '83235', '21581', '24789', '35540', '47232', '95128', '49367', '72120', '22527', '87230', '63912', '69026', '94732', '18600', '94342', '86252', '79429', '52063', '12278', '44614', '42875', '38122', '75434', '85324', '75239', '32596', '58739', '44672', '52422', '47133', '72160', '67458', '71216', '77817', '37400', '46836', '44714', '95832', '48742', '80894', '21593', '26628', '35530', '16213', '90639', '72890', '60966', '82176', '31195', '20644', '16818', '56199', '44420', '89733', '36142', '88658', '13794', '68216', '92203', '89084', '40553', '35279', '45836', '50678', '30458', '51896', '72476', '98846', '61789', '87923', '77755', '16152', '71184', '94257', '87164', '13774', '83775', '36352', '42068', '20106', '13766', '33769', '62433', '11994', '16833', '29646', '23316', '47495', '75237', '17765', '80186', '55631', '71371', '77480', '26879', '88764', '40883', '16847', '60846', '65570', '40263', '95647', '17247', '71687', '49110', '11299', '87844', '17405', '44373', '83599', '41727', '30891', '25629', '32225', '46017', '70007', '20812', '76949', '69473', '69888', '88556', '55245', '33791', '97766', '35872', '38336', '15901', '50031', '26021', '28130', '71157', '36404', '62044', '25524', '39381', '78301', '93617', '37026', '60697', '87925', '20408', '47249', '47015', '59028', '14803', '96494', '12747', '92584', '47590', '66688', '90660', '73711', '90553', '47488', '16689', '79739', '89687', '70059', '16775', '13540', '90235', '29588', '39064', '49413', '67524', '97081', '14332', '12561', '53899', '94597', '82561', '11509', '53682', '58279', '28351', '52791', '54523', '31116', '41035', '67140', '99472', '14454', '40534', '95853', '80706', '43319', '98753', '70022', '54577', '62914', '37987', '73937', '71055', '21351', '39302', '35383', '86807', '55276', '81377', '83005', '89224', '44073', '67934', '68147', '68120', '87952', '11188', '39288', '65655', '37017', '80219', '38816', '55657', '78780', '53793', '25337', '86978', '52138', '64549', '11745', '26203', '33437', '54498', '52089', '28554', '10139', '30116', '60112', '22119', '68437', '27812', '19541', '44598', '65764', '81782', '97369', '37669', '29071', '28327', '49968', '64748', '64601', '38658', '33337', '15888', '44219', '89633', '69645', '75929', '67683', '46653', '60187', '41112', '41887', '67960', '94164', '30876', '50638', '88490', '20677', '53769', '85942', '25570', '41331', '44043', '93211', '26809', '52764', '38725', '23154', '19487', '26499', '48162', '34854', '95801', '30866', '58446', '83233', '48425', '37971', '65846', '95370', '57300', '61177')
82	create table subquery673669 as SELECT ca_zip FROM (select * from subquery910142 INTERSECT select * from subquery762315) AS A2
82	create table subquery840343 as SELECT s_store_name, SUM(ss_net_profit) FROM store_sales, date_dim, store, (select * from subquery673669) AS V1 WHERE ss_store_sk = s_store_sk AND ss_sold_date_sk = d_date_sk AND d_qoy = 2 AND d_year = 1999 AND (SUBSTR(s_zip, 1, 2) = SUBSTR(V1.ca_zip, 1, 2)) GROUP BY s_store_name ORDER BY s_store_name
82	SELECT * FROM (select * from subquery840343) WHERE rownum <= 100
82	create table subquery119888 as SELECT COUNT(*) FROM store_sales WHERE ss_quantity BETWEEN 81 AND 100
82	create table subquery521748 as SELECT COUNT(*) FROM store_sales WHERE ss_quantity BETWEEN 61 AND 80
82	create table subquery66385 as SELECT COUNT(*) FROM store_sales WHERE ss_quantity BETWEEN 41 AND 60
82	create table subquery418827 as SELECT COUNT(*) FROM store_sales WHERE ss_quantity BETWEEN 21 AND 40
82	create table subquery210648 as SELECT COUNT(*) FROM store_sales WHERE ss_quantity BETWEEN 1 AND 20
82	create table subquery912937 as SELECT AVG(ss_ext_tax) FROM store_sales WHERE ss_quantity BETWEEN 81 AND 100
82	create table subquery155992 as SELECT AVG(ss_ext_tax) FROM store_sales WHERE ss_quantity BETWEEN 61 AND 80
82	create table subquery914066 as SELECT AVG(ss_ext_tax) FROM store_sales WHERE ss_quantity BETWEEN 41 AND 60
82	create table subquery376735 as SELECT AVG(ss_ext_tax) FROM store_sales WHERE ss_quantity BETWEEN 21 AND 40
82	create table subquery970926 as SELECT AVG(ss_ext_tax) FROM store_sales WHERE ss_quantity BETWEEN 1 AND 20
82	create table subquery190987 as SELECT AVG(ss_net_paid) FROM store_sales WHERE ss_quantity BETWEEN 81 AND 100
82	create table subquery2642 as SELECT AVG(ss_net_paid) FROM store_sales WHERE ss_quantity BETWEEN 61 AND 80
82	create table subquery360975 as SELECT AVG(ss_net_paid) FROM store_sales WHERE ss_quantity BETWEEN 41 AND 60
82	create table subquery352665 as SELECT AVG(ss_net_paid) FROM store_sales WHERE ss_quantity BETWEEN 21 AND 40
82	create table subquery388551 as SELECT AVG(ss_net_paid) FROM store_sales WHERE ss_quantity BETWEEN 1 AND 20
82	SELECT CASE WHEN (select * from subquery210648) > 40607 THEN (select * from subquery970926) ELSE (select * from subquery388551) END AS bucket1, CASE WHEN (select * from subquery418827) > 1470 THEN (select * from subquery376735) ELSE (select * from subquery352665) END AS bucket2, CASE WHEN (select * from subquery66385) > 35042 THEN (select * from subquery914066) ELSE (select * from subquery360975) END AS bucket3, CASE WHEN (select * from subquery521748) > 28887 THEN (select * from subquery155992) ELSE (select * from subquery2642) END AS bucket4, CASE WHEN (select * from subquery119888) > 22286 THEN (select * from subquery912937) ELSE (select * from subquery190987) END AS bucket5 FROM reason WHERE r_reason_sk = 1
82	create table subquery286014 as SELECT cd_gender, cd_marital_status, cd_education_status, COUNT(*) AS cnt1, cd_purchase_estimate, COUNT(*) AS cnt2, cd_credit_rating, COUNT(*) AS cnt3, cd_dep_count, COUNT(*) AS cnt4, cd_dep_employed_count, COUNT(*) AS cnt5, cd_dep_college_count, COUNT(*) AS cnt6 FROM customer AS c, customer_address AS ca, customer_demographics WHERE c.c_current_addr_sk = ca.ca_address_sk AND ca_county IN ('Lemhi County', 'Montgomery County', 'Hancock County', 'Adams County') AND cd_demo_sk = c.c_current_cdemo_sk AND EXISTS(SELECT * FROM store_sales, date_dim WHERE c.c_customer_sk = ss_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year = 1999 AND d_moy BETWEEN 3 AND 3 + 3) AND (EXISTS(SELECT * FROM web_sales, date_dim WHERE c.c_customer_sk = ws_bill_customer_sk AND ws_sold_date_sk = d_date_sk AND d_year = 1999 AND d_moy BETWEEN 3 AND 3 + 3) OR EXISTS(SELECT * FROM catalog_sales, date_dim WHERE c.c_customer_sk = cs_ship_customer_sk AND cs_sold_date_sk = d_date_sk AND d_year = 1999 AND d_moy BETWEEN 3 AND 3 + 3)) GROUP BY cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count ORDER BY cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count
82	SELECT * FROM (select * from subquery286014) WHERE rownum <= 100
45	create table subquery741275 as SELECT i_item_id, i_item_desc, i_category, i_class, i_current_price, SUM(cs_ext_sales_price) AS itemrevenue, SUM(cs_ext_sales_price) * 100 / SUM(SUM(cs_ext_sales_price)) OVER(PARTITION BY i_class) AS revenueratio FROM catalog_sales, item, date_dim WHERE cs_item_sk = i_item_sk AND i_category IN ('Music', 'Home', 'Books') AND cs_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-05-30' AS DATE) AND (CAST('1998-05-30' AS DATE) + 30) GROUP BY i_item_id, i_item_desc, i_category, i_class, i_current_price ORDER BY i_category, i_class, i_item_id, i_item_desc, revenueratio
45	SELECT * FROM (select * from subquery741275) WHERE rownum <= 100
45	create table subquery808179 as SELECT w_warehouse_name, i_item_id, SUM(CASE WHEN (CAST(d_date AS DATE) < CAST('2001-05-21' AS DATE)) THEN inv_quantity_on_hand ELSE 0 END) AS inv_before, SUM(CASE WHEN (CAST(d_date AS DATE) >= CAST('2001-05-21' AS DATE)) THEN inv_quantity_on_hand ELSE 0 END) AS inv_after FROM inventory, warehouse, item, date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = inv_item_sk AND inv_warehouse_sk = w_warehouse_sk AND inv_date_sk = d_date_sk AND d_date BETWEEN (CAST('2001-05-21' AS DATE) - 30) AND (CAST('2001-05-21' AS DATE) + 30) GROUP BY w_warehouse_name, i_item_id
45	create table subquery974385 as SELECT * FROM (select * from subquery808179) AS x WHERE (CASE WHEN inv_before > 0 THEN inv_after / inv_before ELSE NULL END) BETWEEN 2.0 / 3.0 AND 3.0 / 2.0 ORDER BY w_warehouse_name, i_item_id
45	SELECT * FROM (select * from subquery974385) WHERE rownum <= 100
45	create table subquery609702 as SELECT i_product_name, i_brand, i_class, i_category, AVG(inv_quantity_on_hand) AS qoh FROM inventory, date_dim, item WHERE inv_date_sk = d_date_sk AND inv_item_sk = i_item_sk AND d_month_seq BETWEEN 1204 AND 1204 + 11 GROUP BY ROLLUP(i_product_name, i_brand, i_class, i_category) ORDER BY qoh, i_product_name, i_brand, i_class, i_category
45	SELECT * FROM (select * from subquery609702) WHERE rownum <= 100
45	create table subquery111456 as SELECT SUBSTR(i_item_desc, 1, 30) AS itemdesc, i_item_sk AS item_sk, d_date AS solddate, COUNT(*) AS cnt FROM store_sales, date_dim, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND d_year IN (1998 + 2, 1998, 1998 + 1, 1998 + 3) GROUP BY SUBSTR(i_item_desc, 1, 30), i_item_sk, d_date HAVING COUNT(*) > 4
45	create table subquery645920 as SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS csales FROM store_sales, customer, date_dim WHERE ss_customer_sk = c_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN (1998 + 2, 1998 + 3, 1998, 1998 + 1) GROUP BY c_customer_sk
45	create table subquery489265 as SELECT MAX(csales) AS tpcds_cmax FROM (select * from subquery645920)
45	create table subquery773330 as with max_store_sales AS (select * from subquery489265) SELECT * FROM max_store_sales
45	create table subquery52462 as with max_store_sales AS (select * from subquery489265) SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS ssales FROM store_sales, customer WHERE ss_customer_sk = c_customer_sk GROUP BY c_customer_sk HAVING SUM(ss_quantity * ss_sales_price) > (95 / 100.0) * (select * from subquery773330)
45	create table subquery317236 as with frequent_ss_items AS (select * from subquery111456) SELECT item_sk FROM frequent_ss_items
45	create table subquery362383 as with frequent_ss_items AS (select * from subquery111456) select * from subquery317236
45	WITH frequent_ss_items AS (select * from subquery111456), max_store_sales AS (select * from subquery489265), best_ss_customer AS (select * from subquery52462) SELECT * FROM (SELECT SUM(sales) FROM (SELECT cs_quantity * cs_list_price AS sales FROM catalog_sales, date_dim WHERE d_year = 1998 AND d_moy = 4 AND cs_sold_date_sk = d_date_sk AND cs_item_sk IN (select * from subquery362383) AND cs_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) UNION ALL SELECT ws_quantity * ws_list_price AS sales FROM web_sales, date_dim WHERE d_year = 1998 AND d_moy = 4 AND ws_sold_date_sk = d_date_sk AND ws_item_sk IN (select * from subquery362383) AND ws_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer))) WHERE rownum <= 100
45	create table subquery587996 as SELECT SUBSTR(i_item_desc, 1, 30) AS itemdesc, i_item_sk AS item_sk, d_date AS solddate, COUNT(*) AS cnt FROM store_sales, date_dim, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND d_year IN (1998 + 3) GROUP BY SUBSTR(i_item_desc, 1, 30), i_item_sk, d_date HAVING COUNT(*) > 4
45	create table subquery468284 as SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS csales FROM store_sales, customer, date_dim WHERE ss_customer_sk = c_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN (1998 + 3, 1998, 1998 + 2) GROUP BY c_customer_sk
45	create table subquery529521 as SELECT MAX(csales) AS tpcds_cmax FROM (select * from subquery468284)
45	create table subquery278608 as with max_store_sales AS (select * from subquery529521) SELECT * FROM max_store_sales
45	create table subquery651539 as with max_store_sales AS (select * from subquery529521) SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS ssales FROM store_sales, customer WHERE ss_customer_sk = c_customer_sk GROUP BY c_customer_sk HAVING SUM(ss_quantity * ss_sales_price) > (95 / 100.0) * (select * from subquery278608)
45	create table subquery892035 as with frequent_ss_items AS (select * from subquery587996) SELECT item_sk FROM frequent_ss_items
45	create table subquery447059 as with frequent_ss_items AS (select * from subquery587996) select * from subquery892035
45	WITH frequent_ss_items AS (select * from subquery587996), max_store_sales AS (select * from subquery529521), best_ss_customer AS (select * from subquery651539) SELECT * FROM (SELECT c_last_name, c_first_name, sales FROM (SELECT c_last_name, c_first_name, SUM(cs_quantity * cs_list_price) AS sales FROM catalog_sales, customer, date_dim WHERE d_year = 1998 AND d_moy = 4 AND cs_sold_date_sk = d_date_sk AND cs_item_sk IN (select * from subquery447059) AND cs_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) AND cs_bill_customer_sk = c_customer_sk GROUP BY c_last_name, c_first_name UNION ALL SELECT c_last_name, c_first_name, SUM(ws_quantity * ws_list_price) AS sales FROM web_sales, customer, date_dim WHERE d_year = 1998 AND d_moy = 4 AND ws_sold_date_sk = d_date_sk AND ws_item_sk IN (select * from subquery447059) AND ws_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) AND ws_bill_customer_sk = c_customer_sk GROUP BY c_last_name, c_first_name) ORDER BY c_last_name, c_first_name, sales) WHERE rownum <= 100
37	create table subquery371225 as SELECT s_store_sk, SUM(ss_ext_sales_price) AS sales, SUM(ss_net_profit) AS profit FROM store_sales, date_dim, store WHERE ss_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-08-27' AS DATE) AND (CAST('1998-08-27' AS DATE) + 30) AND ss_store_sk = s_store_sk GROUP BY s_store_sk
37	create table subquery307082 as SELECT s_store_sk, SUM(sr_return_amt) AS returns, SUM(sr_net_loss) AS profit_loss FROM store_returns, date_dim, store WHERE sr_returned_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-08-27' AS DATE) AND (CAST('1998-08-27' AS DATE) + 30) AND sr_store_sk = s_store_sk GROUP BY s_store_sk
37	create table subquery642322 as SELECT cs_call_center_sk, SUM(cs_ext_sales_price) AS sales, SUM(cs_net_profit) AS profit FROM catalog_sales, date_dim WHERE cs_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-08-27' AS DATE) AND (CAST('1998-08-27' AS DATE) + 30) GROUP BY cs_call_center_sk
37	create table subquery214165 as SELECT cr_call_center_sk, SUM(cr_return_amount) AS returns, SUM(cr_net_loss) AS profit_loss FROM catalog_returns, date_dim WHERE cr_returned_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-08-27' AS DATE) AND (CAST('1998-08-27' AS DATE) + 30) GROUP BY cr_call_center_sk
37	create table subquery918314 as SELECT wp_web_page_sk, SUM(ws_ext_sales_price) AS sales, SUM(ws_net_profit) AS profit FROM web_sales, date_dim, web_page WHERE ws_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-08-27' AS DATE) AND (CAST('1998-08-27' AS DATE) + 30) AND ws_web_page_sk = wp_web_page_sk GROUP BY wp_web_page_sk
37	create table subquery607166 as SELECT wp_web_page_sk, SUM(wr_return_amt) AS returns, SUM(wr_net_loss) AS profit_loss FROM web_returns, date_dim, web_page WHERE wr_returned_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-08-27' AS DATE) AND (CAST('1998-08-27' AS DATE) + 30) AND wr_web_page_sk = wp_web_page_sk GROUP BY wp_web_page_sk
37	create table subquery606466 as with ws AS (select * from subquery918314), wr AS (select * from subquery607166) SELECT 'web channel' AS channel, ws.wp_web_page_sk AS id, sales, COALESCE(returns, 0) AS returns, (profit - COALESCE(profit_loss, 0)) AS profit FROM ws LEFT JOIN wr ON ws.wp_web_page_sk = wr.wp_web_page_sk
37	create table subquery732815 as with cs AS (select * from subquery642322), cr AS (select * from subquery214165) SELECT 'catalog channel' AS channel, cs_call_center_sk AS id, sales, returns, (profit - profit_loss) AS profit FROM cs, cr
37	create table subquery4494 as with ss AS (select * from subquery371225), sr AS (select * from subquery307082) SELECT 'store channel' AS channel, ss.s_store_sk AS id, sales, COALESCE(returns, 0) AS returns, (profit - COALESCE(profit_loss, 0)) AS profit FROM ss LEFT JOIN sr ON ss.s_store_sk = sr.s_store_sk
37	create table subquery280730 as with ss AS (select * from subquery371225), sr AS (select * from subquery307082), cs AS (select * from subquery642322), cr AS (select * from subquery214165), ws AS (select * from subquery918314), wr AS (select * from subquery607166) SELECT channel, id, SUM(sales) AS sales, SUM(returns) AS returns, SUM(profit) AS profit FROM (select * from subquery4494 UNION ALL select * from subquery732815 UNION ALL select * from subquery606466) AS x GROUP BY ROLLUP(channel, id) ORDER BY channel, id
37	WITH ss AS (select * from subquery371225), sr AS (select * from subquery307082), cs AS (select * from subquery642322), cr AS (select * from subquery214165), ws AS (select * from subquery918314), wr AS (select * from subquery607166) SELECT * FROM (select * from subquery280730) WHERE rownum <= 100
37	create table subquery796749 as SELECT d_year AS ws_sold_year, ws_item_sk, ws_bill_customer_sk AS ws_customer_sk, SUM(ws_quantity) AS ws_qty, SUM(ws_wholesale_cost) AS ws_wc, SUM(ws_sales_price) AS ws_sp FROM web_sales LEFT JOIN web_returns ON wr_order_number = ws_order_number AND ws_item_sk = wr_item_sk JOIN date_dim ON ws_sold_date_sk = d_date_sk WHERE wr_order_number IS NULL GROUP BY d_year, ws_item_sk, ws_bill_customer_sk
37	create table subquery148430 as SELECT d_year AS cs_sold_year, cs_item_sk, cs_bill_customer_sk AS cs_customer_sk, SUM(cs_quantity) AS cs_qty, SUM(cs_wholesale_cost) AS cs_wc, SUM(cs_sales_price) AS cs_sp FROM catalog_sales LEFT JOIN catalog_returns ON cr_order_number = cs_order_number AND cs_item_sk = cr_item_sk JOIN date_dim ON cs_sold_date_sk = d_date_sk WHERE cr_order_number IS NULL GROUP BY d_year, cs_item_sk, cs_bill_customer_sk
37	create table subquery564046 as SELECT d_year AS ss_sold_year, ss_item_sk, ss_customer_sk, SUM(ss_quantity) AS ss_qty, SUM(ss_wholesale_cost) AS ss_wc, SUM(ss_sales_price) AS ss_sp FROM store_sales LEFT JOIN store_returns ON sr_ticket_number = ss_ticket_number AND ss_item_sk = sr_item_sk JOIN date_dim ON ss_sold_date_sk = d_date_sk WHERE sr_ticket_number IS NULL GROUP BY d_year, ss_item_sk, ss_customer_sk
37	create table subquery656550 as with ws AS (select * from subquery796749), cs AS (select * from subquery148430), ss AS (select * from subquery564046) SELECT ss_sold_year, ss_item_sk, ss_customer_sk, ROUND(ss_qty / (COALESCE(ws_qty, 0) + COALESCE(cs_qty, 0)), 2) AS ratio, ss_qty AS store_qty, ss_wc AS store_wholesale_cost, ss_sp AS store_sales_price, COALESCE(ws_qty, 0) + COALESCE(cs_qty, 0) AS other_chan_qty, COALESCE(ws_wc, 0) + COALESCE(cs_wc, 0) AS other_chan_wholesale_cost, COALESCE(ws_sp, 0) + COALESCE(cs_sp, 0) AS other_chan_sales_price FROM ss LEFT JOIN ws ON (ws_sold_year = ss_sold_year AND ws_item_sk = ss_item_sk AND ws_customer_sk = ss_customer_sk) LEFT JOIN cs ON (cs_sold_year = ss_sold_year AND cs_item_sk = ss_item_sk AND cs_customer_sk = ss_customer_sk) WHERE (COALESCE(ws_qty, 0) > 0 OR COALESCE(cs_qty, 0) > 0) AND ss_sold_year = 2000 ORDER BY ss_sold_year, ss_item_sk, ss_customer_sk, ss_qty DESC, ss_wc DESC, ss_sp DESC, other_chan_qty, other_chan_wholesale_cost, other_chan_sales_price, ratio
37	WITH ws AS (select * from subquery796749), cs AS (select * from subquery148430), ss AS (select * from subquery564046) SELECT * FROM (select * from subquery656550) WHERE rownum <= 100
37	create table subquery713388 as SELECT ss_ticket_number, ss_customer_sk, store.s_city, SUM(ss_coupon_amt) AS amt, SUM(ss_net_profit) AS profit FROM store_sales, date_dim, store, household_demographics WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_store_sk = store.s_store_sk AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND (household_demographics.hd_dep_count = 1 OR household_demographics.hd_vehicle_count > 3) AND date_dim.d_dow = 1 AND date_dim.d_year IN (1998 + 1, 1998) AND store.s_number_employees BETWEEN 200 AND 295 GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, store.s_city
37	create table subquery411952 as SELECT c_last_name, c_first_name, SUBSTR(s_city, 1, 30), ss_ticket_number, amt, profit FROM (select * from subquery713388) AS ms, customer WHERE ss_customer_sk = c_customer_sk ORDER BY c_last_name, c_first_name, SUBSTR(s_city, 1, 30), profit
37	SELECT * FROM (select * from subquery411952) WHERE rownum <= 100
37	create table subquery859823 as SELECT cr_returning_customer_sk AS ctr_customer_sk, ca_state AS ctr_state, SUM(cr_return_amt_inc_tax) AS ctr_total_return FROM catalog_returns, date_dim, customer_address WHERE cr_returned_date_sk = d_date_sk AND d_year = 2001 AND cr_returning_addr_sk = ca_address_sk GROUP BY cr_returning_customer_sk, ca_state
37	create table subquery281621 as with customer_total_return AS (select * from subquery859823) SELECT c_customer_id, c_salutation, c_first_name, c_last_name, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type, ctr_total_return FROM customer_total_return AS ctr1, customer_address, customer WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return) * 1.2 FROM customer_total_return AS ctr2 WHERE ctr1.ctr_state = ctr2.ctr_state) AND ca_address_sk = c_current_addr_sk AND ca_state = 'WV' AND ctr1.ctr_customer_sk = c_customer_sk ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type, ctr_total_return
37	WITH customer_total_return AS (select * from subquery859823) SELECT * FROM (select * from subquery281621) WHERE rownum <= 100
85	create table subquery870552 as SELECT i_item_id, i_item_desc, i_category, i_class, i_current_price, SUM(cs_ext_sales_price) AS itemrevenue, SUM(cs_ext_sales_price) * 100 / SUM(SUM(cs_ext_sales_price)) OVER(PARTITION BY i_class) AS revenueratio FROM catalog_sales, item, date_dim WHERE cs_item_sk = i_item_sk AND i_category IN ('Women', 'Sports', 'Men') AND cs_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1998-01-05' AS DATE) AND (CAST('1998-01-05' AS DATE) + 30) GROUP BY i_item_id, i_item_desc, i_category, i_class, i_current_price ORDER BY i_category, i_class, i_item_id, i_item_desc, revenueratio
85	SELECT * FROM (select * from subquery870552) WHERE rownum <= 100
85	create table subquery168297 as SELECT w_warehouse_name, i_item_id, SUM(CASE WHEN (CAST(d_date AS DATE) < CAST('2002-04-10' AS DATE)) THEN inv_quantity_on_hand ELSE 0 END) AS inv_before, SUM(CASE WHEN (CAST(d_date AS DATE) >= CAST('2002-04-10' AS DATE)) THEN inv_quantity_on_hand ELSE 0 END) AS inv_after FROM inventory, warehouse, item, date_dim WHERE i_current_price BETWEEN 0.99 AND 1.49 AND i_item_sk = inv_item_sk AND inv_warehouse_sk = w_warehouse_sk AND inv_date_sk = d_date_sk AND d_date BETWEEN (CAST('2002-04-10' AS DATE) - 30) AND (CAST('2002-04-10' AS DATE) + 30) GROUP BY w_warehouse_name, i_item_id
85	create table subquery975567 as SELECT * FROM (select * from subquery168297) AS x WHERE (CASE WHEN inv_before > 0 THEN inv_after / inv_before ELSE NULL END) BETWEEN 2.0 / 3.0 AND 3.0 / 2.0 ORDER BY w_warehouse_name, i_item_id
85	SELECT * FROM (select * from subquery975567) WHERE rownum <= 100
85	create table subquery554345 as SELECT i_product_name, i_brand, i_class, i_category, AVG(inv_quantity_on_hand) AS qoh FROM inventory, date_dim, item WHERE inv_date_sk = d_date_sk AND inv_item_sk = i_item_sk AND d_month_seq BETWEEN 1189 AND 1189 + 11 GROUP BY ROLLUP(i_product_name, i_brand, i_class, i_category) ORDER BY qoh, i_product_name, i_brand, i_class, i_category
85	SELECT * FROM (select * from subquery554345) WHERE rownum <= 100
85	create table subquery823007 as SELECT SUBSTR(i_item_desc, 1, 30) AS itemdesc, i_item_sk AS item_sk, d_date AS solddate, COUNT(*) AS cnt FROM store_sales, date_dim, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND d_year IN (2000 + 2) GROUP BY SUBSTR(i_item_desc, 1, 30), i_item_sk, d_date HAVING COUNT(*) > 4
85	create table subquery619536 as SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS csales FROM store_sales, customer, date_dim WHERE ss_customer_sk = c_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN (2000 + 2, 2000 + 3) GROUP BY c_customer_sk
85	create table subquery920332 as SELECT MAX(csales) AS tpcds_cmax FROM (select * from subquery619536)
85	create table subquery86594 as with max_store_sales AS (select * from subquery920332) SELECT * FROM max_store_sales
85	create table subquery370088 as with max_store_sales AS (select * from subquery920332) SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS ssales FROM store_sales, customer WHERE ss_customer_sk = c_customer_sk GROUP BY c_customer_sk HAVING SUM(ss_quantity * ss_sales_price) > (95 / 100.0) * (select * from subquery86594)
85	create table subquery676444 as with frequent_ss_items AS (select * from subquery823007) SELECT item_sk FROM frequent_ss_items
85	create table subquery110144 as with frequent_ss_items AS (select * from subquery823007) select * from subquery676444
85	WITH frequent_ss_items AS (select * from subquery823007), max_store_sales AS (select * from subquery920332), best_ss_customer AS (select * from subquery370088) SELECT * FROM (SELECT SUM(sales) FROM (SELECT cs_quantity * cs_list_price AS sales FROM catalog_sales, date_dim WHERE d_year = 2000 AND d_moy = 6 AND cs_sold_date_sk = d_date_sk AND cs_item_sk IN (select * from subquery110144) AND cs_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) UNION ALL SELECT ws_quantity * ws_list_price AS sales FROM web_sales, date_dim WHERE d_year = 2000 AND d_moy = 6 AND ws_sold_date_sk = d_date_sk AND ws_item_sk IN (select * from subquery110144) AND ws_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer))) WHERE rownum <= 100
85	create table subquery765446 as SELECT SUBSTR(i_item_desc, 1, 30) AS itemdesc, i_item_sk AS item_sk, d_date AS solddate, COUNT(*) AS cnt FROM store_sales, date_dim, item WHERE ss_sold_date_sk = d_date_sk AND ss_item_sk = i_item_sk AND d_year IN (2000 + 1) GROUP BY SUBSTR(i_item_desc, 1, 30), i_item_sk, d_date HAVING COUNT(*) > 4
85	create table subquery635155 as SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS csales FROM store_sales, customer, date_dim WHERE ss_customer_sk = c_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN (2000 + 2, 2000 + 3, 2000 + 1, 2000) GROUP BY c_customer_sk
85	create table subquery438215 as SELECT MAX(csales) AS tpcds_cmax FROM (select * from subquery635155)
85	create table subquery762278 as with max_store_sales AS (select * from subquery438215) SELECT * FROM max_store_sales
85	create table subquery284149 as with max_store_sales AS (select * from subquery438215) SELECT c_customer_sk, SUM(ss_quantity * ss_sales_price) AS ssales FROM store_sales, customer WHERE ss_customer_sk = c_customer_sk GROUP BY c_customer_sk HAVING SUM(ss_quantity * ss_sales_price) > (95 / 100.0) * (select * from subquery762278)
85	create table subquery53218 as with frequent_ss_items AS (select * from subquery765446) SELECT item_sk FROM frequent_ss_items
85	create table subquery480943 as with frequent_ss_items AS (select * from subquery765446) select * from subquery53218
85	WITH frequent_ss_items AS (select * from subquery765446), max_store_sales AS (select * from subquery438215), best_ss_customer AS (select * from subquery284149) SELECT * FROM (SELECT c_last_name, c_first_name, sales FROM (SELECT c_last_name, c_first_name, SUM(cs_quantity * cs_list_price) AS sales FROM catalog_sales, customer, date_dim WHERE d_year = 2000 AND d_moy = 6 AND cs_sold_date_sk = d_date_sk AND cs_item_sk IN (select * from subquery480943) AND cs_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) AND cs_bill_customer_sk = c_customer_sk GROUP BY c_last_name, c_first_name UNION ALL SELECT c_last_name, c_first_name, SUM(ws_quantity * ws_list_price) AS sales FROM web_sales, customer, date_dim WHERE d_year = 2000 AND d_moy = 6 AND ws_sold_date_sk = d_date_sk AND ws_item_sk IN (select * from subquery480943) AND ws_bill_customer_sk IN (SELECT c_customer_sk FROM best_ss_customer) AND ws_bill_customer_sk = c_customer_sk GROUP BY c_last_name, c_first_name) ORDER BY c_last_name, c_first_name, sales) WHERE rownum <= 100
51	create table subquery765713 as SELECT i_category, i_brand, s_store_name, s_company_name, d_year, d_moy, SUM(ss_sales_price) AS sum_sales, AVG(SUM(ss_sales_price)) OVER(PARTITION BY i_category, i_brand, s_store_name, s_company_name, d_year) AS avg_monthly_sales, RANK() OVER(PARTITION BY i_category, i_brand, s_store_name, s_company_name ORDER BY d_year, d_moy) AS rn FROM item, store_sales, date_dim, store WHERE ss_item_sk = i_item_sk AND ss_sold_date_sk = d_date_sk AND ss_store_sk = s_store_sk AND (d_year = 1999 OR (d_year = 1999 - 1 AND d_moy = 12) OR (d_year = 1999 + 1 AND d_moy = 1)) GROUP BY i_category, i_brand, s_store_name, s_company_name, d_year, d_moy
51	create table subquery468724 as with v1 AS (select * from subquery765713) SELECT v1.i_brand, v1.d_year, v1.d_moy, v1.avg_monthly_sales, v1.sum_sales, v1_lag.sum_sales AS psum, v1_lead.sum_sales AS nsum FROM v1, v1 AS v1_lag, v1 AS v1_lead WHERE v1.i_category = v1_lag.i_category AND v1.i_category = v1_lead.i_category AND v1.i_brand = v1_lag.i_brand AND v1.i_brand = v1_lead.i_brand AND v1.s_store_name = v1_lag.s_store_name AND v1.s_store_name = v1_lead.s_store_name AND v1.s_company_name = v1_lag.s_company_name AND v1.s_company_name = v1_lead.s_company_name AND v1.rn = v1_lag.rn + 1 AND v1.rn = v1_lead.rn - 1
51	WITH v1 AS (select * from subquery765713), v2 AS (select * from subquery468724) SELECT * FROM (SELECT * FROM v2 WHERE d_year = 1999 AND avg_monthly_sales > 0 AND CASE WHEN avg_monthly_sales > 0 THEN ABS(sum_sales - avg_monthly_sales) / avg_monthly_sales ELSE NULL END > 0.1 ORDER BY sum_sales - avg_monthly_sales, nsum) WHERE rownum <= 100
51	SELECT SUM(ss_quantity) FROM store_sales, store, customer_demographics, customer_address, date_dim WHERE s_store_sk = ss_store_sk AND ss_sold_date_sk = d_date_sk AND d_year = 1998 AND ((cd_demo_sk = ss_cdemo_sk AND cd_marital_status = 'S' AND cd_education_status = 'College' AND ss_sales_price BETWEEN 100.00 AND 150.00) OR (cd_demo_sk = ss_cdemo_sk AND cd_marital_status = 'W' AND cd_education_status = '2 yr Degree' AND ss_sales_price BETWEEN 50.00 AND 100.00) OR (cd_demo_sk = ss_cdemo_sk AND cd_marital_status = 'M' AND cd_education_status = '4 yr Degree' AND ss_sales_price BETWEEN 150.00 AND 200.00)) AND ((ss_addr_sk = ca_address_sk AND ca_country = 'United States' AND ca_state IN ('VA') AND ss_net_profit BETWEEN 0 AND 2000) OR (ss_addr_sk = ca_address_sk AND ca_country = 'United States' AND ca_state IN ('TX', 'AL', 'NC') AND ss_net_profit BETWEEN 150 AND 3000) OR (ss_addr_sk = ca_address_sk AND ca_country = 'United States' AND ca_state IN ('WI', 'PA', 'FL') AND ss_net_profit BETWEEN 50 AND 25000))
51	create table subquery147740 as SELECT s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk <= 30) THEN 1 ELSE 0 END) AS "30 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 30) AND (sr_returned_date_sk - ss_sold_date_sk <= 60) THEN 1 ELSE 0 END) AS "31-60 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 60) AND (sr_returned_date_sk - ss_sold_date_sk <= 90) THEN 1 ELSE 0 END) AS "61-90 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 90) AND (sr_returned_date_sk - ss_sold_date_sk <= 120) THEN 1 ELSE 0 END) AS "91-120 days", SUM(CASE WHEN (sr_returned_date_sk - ss_sold_date_sk > 120) THEN 1 ELSE 0 END) AS ">120 days" FROM store_sales, store_returns, store, date_dim AS d1, date_dim AS d2 WHERE d2.d_year = 2000 AND d2.d_moy = 9 AND ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk AND ss_sold_date_sk = d1.d_date_sk AND sr_returned_date_sk = d2.d_date_sk AND ss_customer_sk = sr_customer_sk AND ss_store_sk = s_store_sk GROUP BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip ORDER BY s_store_name, s_company_id, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip
51	SELECT * FROM (select * from subquery147740) WHERE rownum <= 100
51	create table subquery354687 as SELECT ws_item_sk AS item_sk, d_date, SUM(SUM(ws_sales_price)) OVER(PARTITION BY ws_item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS cume_sales FROM web_sales, date_dim WHERE ws_sold_date_sk = d_date_sk AND d_month_seq BETWEEN 1198 AND 1198 + 11 AND NOT ws_item_sk IS NULL GROUP BY ws_item_sk, d_date
51	create table subquery555332 as SELECT ss_item_sk AS item_sk, d_date, SUM(SUM(ss_sales_price)) OVER(PARTITION BY ss_item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS cume_sales FROM store_sales, date_dim WHERE ss_sold_date_sk = d_date_sk AND d_month_seq BETWEEN 1198 AND 1198 + 11 AND NOT ss_item_sk IS NULL GROUP BY ss_item_sk, d_date
51	create table subquery557896 as with web_v1 AS (select * from subquery354687), store_v1 AS (select * from subquery555332) SELECT CASE WHEN NOT web.item_sk IS NULL THEN web.item_sk ELSE store.item_sk END AS item_sk, CASE WHEN NOT web.d_date IS NULL THEN web.d_date ELSE store.d_date END AS d_date, web.cume_sales AS web_sales, store.cume_sales AS store_sales FROM web_v1 AS web FULL OUTER JOIN store_v1 AS store ON (web.item_sk = store.item_sk AND web.d_date = store.d_date)
51	create table subquery866843 as with web_v1 AS (select * from subquery354687), store_v1 AS (select * from subquery555332) SELECT item_sk, d_date, web_sales, store_sales, MAX(web_sales) OVER(PARTITION BY item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS web_cumulative, MAX(store_sales) OVER(PARTITION BY item_sk ORDER BY d_date rows BETWEEN unbounded preceding AND current row) AS store_cumulative FROM (select * from subquery557896) AS x
51	create table subquery534862 as with web_v1 AS (select * from subquery354687), store_v1 AS (select * from subquery555332) SELECT * FROM (select * from subquery866843) AS y WHERE web_cumulative > store_cumulative ORDER BY item_sk, d_date
51	WITH web_v1 AS (select * from subquery354687), store_v1 AS (select * from subquery555332) SELECT * FROM (select * from subquery534862) WHERE rownum <= 100
97	create table subquery149457 as SELECT s_store_sk, SUM(ss_ext_sales_price) AS sales, SUM(ss_net_profit) AS profit FROM store_sales, date_dim, store WHERE ss_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1999-08-13' AS DATE) AND (CAST('1999-08-13' AS DATE) + 30) AND ss_store_sk = s_store_sk GROUP BY s_store_sk
97	create table subquery29524 as SELECT s_store_sk, SUM(sr_return_amt) AS returns, SUM(sr_net_loss) AS profit_loss FROM store_returns, date_dim, store WHERE sr_returned_date_sk = d_date_sk AND d_date BETWEEN CAST('1999-08-13' AS DATE) AND (CAST('1999-08-13' AS DATE) + 30) AND sr_store_sk = s_store_sk GROUP BY s_store_sk
97	create table subquery83668 as SELECT cs_call_center_sk, SUM(cs_ext_sales_price) AS sales, SUM(cs_net_profit) AS profit FROM catalog_sales, date_dim WHERE cs_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1999-08-13' AS DATE) AND (CAST('1999-08-13' AS DATE) + 30) GROUP BY cs_call_center_sk
97	create table subquery183429 as SELECT cr_call_center_sk, SUM(cr_return_amount) AS returns, SUM(cr_net_loss) AS profit_loss FROM catalog_returns, date_dim WHERE cr_returned_date_sk = d_date_sk AND d_date BETWEEN CAST('1999-08-13' AS DATE) AND (CAST('1999-08-13' AS DATE) + 30) GROUP BY cr_call_center_sk
97	create table subquery859580 as SELECT wp_web_page_sk, SUM(ws_ext_sales_price) AS sales, SUM(ws_net_profit) AS profit FROM web_sales, date_dim, web_page WHERE ws_sold_date_sk = d_date_sk AND d_date BETWEEN CAST('1999-08-13' AS DATE) AND (CAST('1999-08-13' AS DATE) + 30) AND ws_web_page_sk = wp_web_page_sk GROUP BY wp_web_page_sk
97	create table subquery243801 as SELECT wp_web_page_sk, SUM(wr_return_amt) AS returns, SUM(wr_net_loss) AS profit_loss FROM web_returns, date_dim, web_page WHERE wr_returned_date_sk = d_date_sk AND d_date BETWEEN CAST('1999-08-13' AS DATE) AND (CAST('1999-08-13' AS DATE) + 30) AND wr_web_page_sk = wp_web_page_sk GROUP BY wp_web_page_sk
97	create table subquery489997 as with ws AS (select * from subquery859580), wr AS (select * from subquery243801) SELECT 'web channel' AS channel, ws.wp_web_page_sk AS id, sales, COALESCE(returns, 0) AS returns, (profit - COALESCE(profit_loss, 0)) AS profit FROM ws LEFT JOIN wr ON ws.wp_web_page_sk = wr.wp_web_page_sk
97	create table subquery823425 as with cs AS (select * from subquery83668), cr AS (select * from subquery183429) SELECT 'catalog channel' AS channel, cs_call_center_sk AS id, sales, returns, (profit - profit_loss) AS profit FROM cs, cr
97	create table subquery400233 as with ss AS (select * from subquery149457), sr AS (select * from subquery29524) SELECT 'store channel' AS channel, ss.s_store_sk AS id, sales, COALESCE(returns, 0) AS returns, (profit - COALESCE(profit_loss, 0)) AS profit FROM ss LEFT JOIN sr ON ss.s_store_sk = sr.s_store_sk
97	create table subquery548635 as with ss AS (select * from subquery149457), sr AS (select * from subquery29524), cs AS (select * from subquery83668), cr AS (select * from subquery183429), ws AS (select * from subquery859580), wr AS (select * from subquery243801) SELECT channel, id, SUM(sales) AS sales, SUM(returns) AS returns, SUM(profit) AS profit FROM (select * from subquery400233 UNION ALL select * from subquery823425 UNION ALL select * from subquery489997) AS x GROUP BY ROLLUP(channel, id) ORDER BY channel, id
97	WITH ss AS (select * from subquery149457), sr AS (select * from subquery29524), cs AS (select * from subquery83668), cr AS (select * from subquery183429), ws AS (select * from subquery859580), wr AS (select * from subquery243801) SELECT * FROM (select * from subquery548635) WHERE rownum <= 100
97	create table subquery408909 as SELECT d_year AS ws_sold_year, ws_item_sk, ws_bill_customer_sk AS ws_customer_sk, SUM(ws_quantity) AS ws_qty, SUM(ws_wholesale_cost) AS ws_wc, SUM(ws_sales_price) AS ws_sp FROM web_sales LEFT JOIN web_returns ON wr_order_number = ws_order_number AND ws_item_sk = wr_item_sk JOIN date_dim ON ws_sold_date_sk = d_date_sk WHERE wr_order_number IS NULL GROUP BY d_year, ws_item_sk, ws_bill_customer_sk
97	create table subquery751639 as SELECT d_year AS cs_sold_year, cs_item_sk, cs_bill_customer_sk AS cs_customer_sk, SUM(cs_quantity) AS cs_qty, SUM(cs_wholesale_cost) AS cs_wc, SUM(cs_sales_price) AS cs_sp FROM catalog_sales LEFT JOIN catalog_returns ON cr_order_number = cs_order_number AND cs_item_sk = cr_item_sk JOIN date_dim ON cs_sold_date_sk = d_date_sk WHERE cr_order_number IS NULL GROUP BY d_year, cs_item_sk, cs_bill_customer_sk
97	create table subquery824777 as SELECT d_year AS ss_sold_year, ss_item_sk, ss_customer_sk, SUM(ss_quantity) AS ss_qty, SUM(ss_wholesale_cost) AS ss_wc, SUM(ss_sales_price) AS ss_sp FROM store_sales LEFT JOIN store_returns ON sr_ticket_number = ss_ticket_number AND ss_item_sk = sr_item_sk JOIN date_dim ON ss_sold_date_sk = d_date_sk WHERE sr_ticket_number IS NULL GROUP BY d_year, ss_item_sk, ss_customer_sk
97	create table subquery779390 as with ws AS (select * from subquery408909), cs AS (select * from subquery751639), ss AS (select * from subquery824777) SELECT ss_sold_year, ss_item_sk, ss_customer_sk, ROUND(ss_qty / (COALESCE(ws_qty, 0) + COALESCE(cs_qty, 0)), 2) AS ratio, ss_qty AS store_qty, ss_wc AS store_wholesale_cost, ss_sp AS store_sales_price, COALESCE(ws_qty, 0) + COALESCE(cs_qty, 0) AS other_chan_qty, COALESCE(ws_wc, 0) + COALESCE(cs_wc, 0) AS other_chan_wholesale_cost, COALESCE(ws_sp, 0) + COALESCE(cs_sp, 0) AS other_chan_sales_price FROM ss LEFT JOIN ws ON (ws_sold_year = ss_sold_year AND ws_item_sk = ss_item_sk AND ws_customer_sk = ss_customer_sk) LEFT JOIN cs ON (cs_sold_year = ss_sold_year AND cs_item_sk = ss_item_sk AND cs_customer_sk = ss_customer_sk) WHERE (COALESCE(ws_qty, 0) > 0 OR COALESCE(cs_qty, 0) > 0) AND ss_sold_year = 2001 ORDER BY ss_sold_year, ss_item_sk, ss_customer_sk, ss_qty DESC, ss_wc DESC, ss_sp DESC, other_chan_qty, other_chan_wholesale_cost, other_chan_sales_price, ratio
97	WITH ws AS (select * from subquery408909), cs AS (select * from subquery751639), ss AS (select * from subquery824777) SELECT * FROM (select * from subquery779390) WHERE rownum <= 100
97	create table subquery204469 as SELECT ss_ticket_number, ss_customer_sk, store.s_city, SUM(ss_coupon_amt) AS amt, SUM(ss_net_profit) AS profit FROM store_sales, date_dim, store, household_demographics WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_store_sk = store.s_store_sk AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND (household_demographics.hd_dep_count = 0 OR household_demographics.hd_vehicle_count > 1) AND date_dim.d_dow = 1 AND date_dim.d_year IN (1998 + 1, 1998) AND store.s_number_employees BETWEEN 200 AND 295 GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, store.s_city
97	create table subquery78512 as SELECT c_last_name, c_first_name, SUBSTR(s_city, 1, 30), ss_ticket_number, amt, profit FROM (select * from subquery204469) AS ms, customer WHERE ss_customer_sk = c_customer_sk ORDER BY c_last_name, c_first_name, SUBSTR(s_city, 1, 30), profit
97	SELECT * FROM (select * from subquery78512) WHERE rownum <= 100
97	create table subquery539036 as SELECT cr_returning_customer_sk AS ctr_customer_sk, ca_state AS ctr_state, SUM(cr_return_amt_inc_tax) AS ctr_total_return FROM catalog_returns, date_dim, customer_address WHERE cr_returned_date_sk = d_date_sk AND d_year = 2000 AND cr_returning_addr_sk = ca_address_sk GROUP BY cr_returning_customer_sk, ca_state
97	create table subquery427596 as with customer_total_return AS (select * from subquery539036) SELECT c_customer_id, c_salutation, c_first_name, c_last_name, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type, ctr_total_return FROM customer_total_return AS ctr1, customer_address, customer WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return) * 1.2 FROM customer_total_return AS ctr2 WHERE ctr1.ctr_state = ctr2.ctr_state) AND ca_address_sk = c_current_addr_sk AND ca_state = 'WV' AND ctr1.ctr_customer_sk = c_customer_sk ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type, ctr_total_return
97	WITH customer_total_return AS (select * from subquery539036) SELECT * FROM (select * from subquery427596) WHERE rownum <= 100
